{"version":3,"file":"sdk-client-common.cjs.production.min.js","sources":["../src/types.ts","../src/constants.ts","../src/internal/graphql-queries/status.ts","../src/internal/graphql-queries/plugin.ts","../src/errors.ts","../src/multiuri.ts","../src/validation.ts","../src/encoding.ts","../src/utils.ts","../src/context-core.ts","../src/promises.ts","../src/internal/modules/graphql.ts","../src/internal/modules/ipfs.ts","../src/internal/modules/web3.ts","../src/client-core.ts","../src/context.ts","../src/schemas.ts","../src/internal/constants.ts"],"sourcesContent":["import {\n  FrameworkContractsNames,\n  NonFrameworkContractsNames,\n} from \"@aragon/osx-commons-configs\";\nimport {\n  GraphQLContextParams,\n  GraphQLContextState,\n  IpfsContextParams,\n  IpfsContextState,\n  Web3ContextParams,\n  Web3ContextState,\n} from \"./internal\";\n\nexport type ContextParams =\n  & Web3ContextParams\n  & IpfsContextParams\n  & GraphQLContextParams;\n\nexport type ContextState =\n  & Web3ContextState\n  & IpfsContextState\n  & GraphQLContextState;\n\nexport type OverriddenState =\n  & {\n    [key in FrameworkContractsNames]: boolean;\n  }\n  & {\n    [key in NonFrameworkContractsNames]: boolean;\n  }\n  & {\n    gasFeeEstimationFactor: boolean;\n    ipfsNodes: boolean;\n    graphqlNodes: boolean;\n  };\n\n/**\n * Contains the payload passed to the global DAO factory so that\n * plugins can be initialized\n */\nexport interface PluginInstallItem {\n  id: string; // ENS domain or address of the plugin's Repo\n  data: Uint8Array;\n}\n\nexport type GasFeeEstimation = {\n  average: bigint;\n  max: bigint;\n};\n\n/**\n * Contains the payload passed to governance contracts, serializing\n * the actions to do upon approval\n */\nexport type DaoAction = {\n  to: string;\n  value: bigint;\n  data: Uint8Array;\n};\n\nexport type MetadataAbiInput = {\n  name: string;\n  type: string;\n  internalType: string;\n  description: string;\n  components?: MetadataAbiInput[];\n};\n\nexport type PrepareInstallationParams = {\n  daoAddressOrEns: string;\n  pluginRepo: string;\n  version?: {\n    build: number;\n    release: number;\n  };\n  installationParams?: any[];\n  installationAbi?: MetadataAbiInput[];\n};\n\nexport enum PrepareInstallationStep {\n  PREPARING = \"preparing\",\n  DONE = \"done\",\n}\n\nexport type PrepareInstallationStepValue =\n  | { key: PrepareInstallationStep.PREPARING; txHash: string }\n  | {\n    key: PrepareInstallationStep.DONE;\n  } & ApplyInstallationParams;\n\nexport type ApplyInstallationParamsBase = {\n  permissions: MultiTargetPermission[];\n  versionTag: VersionTag;\n  pluginRepo: string;\n  pluginAddress: string;\n};\n\nexport type ApplyInstallationParams = ApplyInstallationParamsBase & {\n  helpers: string[];\n};\nexport type DecodedApplyInstallationParams = ApplyInstallationParamsBase & {\n  helpersHash: string;\n};\n\n/* Uninstallation */\nexport type PrepareUninstallationParams = {\n  daoAddressOrEns: string;\n  pluginAddress: string;\n  pluginInstallationIndex?: number;\n  uninstallationParams?: any[];\n  uninstallationAbi?: string[];\n};\nexport enum PrepareUninstallationSteps {\n  PREPARING = \"preparing\",\n  DONE = \"done\",\n}\nexport type PrepareUninstallationStepValue =\n  | { key: PrepareUninstallationSteps.PREPARING; txHash: string }\n  | {\n    key: PrepareUninstallationSteps.DONE;\n  } & ApplyUninstallationParams;\n\nexport type ApplyUninstallationParams = ApplyInstallationParamsBase;\nexport type DecodedApplyUninstallationParams = ApplyInstallationParamsBase;\n\nexport type VersionTag = {\n  build: number;\n  release: number;\n};\n\nexport enum PermissionOperationType {\n  GRANT = 0,\n  REVOKE = 1,\n  GRANT_WITH_CONDITION = 2,\n}\n\nexport type MultiTargetPermission = {\n  operation: PermissionOperationType;\n  where: string;\n  who: string;\n  condition?: string;\n  permissionId: string;\n};\n\nexport type Pagination = {\n  skip?: number;\n  limit?: number;\n  direction?: SortDirection;\n};\n\nexport enum SortDirection {\n  ASC = \"asc\",\n  DESC = \"desc\",\n}\n\nexport interface InterfaceParams {\n  id: string;\n  functionName: string;\n  hash: string;\n}\n\nexport enum TokenType {\n  NATIVE = \"native\",\n  ERC20 = \"erc20\",\n  ERC721 = \"erc721\",\n  ERC1155 = \"erc1155\",\n}\n\n/**\n * Contains the human-readable information about a proposal\n */\nexport type ProposalMetadata = {\n  title: string;\n  summary: string;\n  description: string;\n  resources: Array<{ url: string; name: string }>;\n  media?: {\n    header?: string;\n    logo?: string;\n  };\n};\n\n/**\n * Contains the human-readable information about a proposal\n */\nexport type ProposalMetadataSummary = {\n  title: string;\n  summary: string;\n};\n\nexport enum ProposalStatus {\n  ACTIVE = \"Active\",\n  PENDING = \"Pending\",\n  SUCCEEDED = \"Succeeded\",\n  EXECUTED = \"Executed\",\n  DEFEATED = \"Defeated\",\n}\n\n// Long version\nexport type ProposalBase = {\n  id: string;\n  dao: {\n    address: string;\n    name: string;\n  };\n  creatorAddress: string;\n  metadata: ProposalMetadata;\n  metadataHash?: string;\n  startDate: Date;\n  endDate: Date;\n  creationDate: Date;\n  actions: DaoAction[];\n  status: ProposalStatus;\n  creationBlockNumber: number;\n  executionDate: Date | null;\n  executionBlockNumber: number | null;\n  executionTxHash: string | null;\n};\n\n// Short version\nexport type ProposalListItemBase = {\n  id: string;\n  dao: {\n    address: string;\n    name: string;\n  };\n  creatorAddress: string;\n  metadata: ProposalMetadataSummary;\n  metadataHash?: string;\n  startDate: Date;\n  endDate: Date;\n  status: ProposalStatus;\n  actions: DaoAction[];\n};\n\nexport type PrepareUpdateParams = {\n  pluginAddress: string;\n  daoAddressOrEns: string;\n  pluginInstallationIndex?: number;\n  newVersion: VersionTag;\n  updateParams?: any[];\n  updateAbi?: MetadataAbiInput[];\n  pluginRepo: string;\n};\n\nexport enum PrepareUpdateStep {\n  PREPARING = \"preparing\",\n  DONE = \"done\",\n}\n\nexport type PrepareUpdateStepValue =\n  | { key: PrepareUpdateStep.PREPARING; txHash: string }\n  | {\n    key: PrepareUpdateStep.DONE;\n  } & ApplyUpdateParams;\n\nexport type ApplyUpdateParamsBase = {\n  versionTag: VersionTag;\n  initData: Uint8Array;\n  pluginRepo: string;\n  pluginAddress: string;\n  permissions: MultiTargetPermission[];\n};\nexport type ApplyUpdateParams = ApplyUpdateParamsBase & {\n  helpers: string[];\n};\nexport type DecodedApplyUpdateParams = ApplyUpdateParamsBase & {\n  helpersHash: string;\n};\nexport type IsMemberParams = {\n  address: string;\n  pluginAddress: string;\n  blockNumber?: number;\n};\n","import { ProposalMetadata } from \"./types\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\n/** Timeout that will be applied to operations involving\n * many fetch requests that could take a long time */\nexport const MULTI_FETCH_TIMEOUT = 7 * 1000;\n\nexport const UNSUPPORTED_PROPOSAL_METADATA_LINK: ProposalMetadata = {\n  title: \"(unsupported metadata link)\",\n  summary: \"(the link to the metadata is not supported)\",\n  description: \"(the link to the metadata is not supported)\",\n  resources: [],\n};\nexport const EMPTY_PROPOSAL_METADATA_LINK: ProposalMetadata = {\n  title: \"(the proposal has no metadata)\",\n  summary: \"(the current proposal does not have any content defined)\",\n  description: \"(the current proposal does not have any content defined)\",\n  resources: [],\n};\nexport const UNAVAILABLE_PROPOSAL_METADATA: ProposalMetadata = {\n  title: \"(unavailable metadata)\",\n  summary: \"(the proposal metadata is not available)\",\n  description: \"(the proposal metadata is not available)\",\n  resources: [],\n};\n\nexport const IPFS_ENDPOINTS = {\n  prod: [\n    {\n      url: \"https://prod.ipfs.aragon.network/api/v0\",\n      headers: {\n        \"X-API-KEY\": \"b477RhECf8s8sdM7XrkLBs2wHc4kCMwpbcFC55Kt\",\n      },\n    },\n  ],\n  test: [\n    {\n      url: \"https://test.ipfs.aragon.network/api/v0\",\n      headers: {\n        \"X-API-KEY\": \"b477RhECf8s8sdM7XrkLBs2wHc4kCMwpbcFC55Kt\",\n      },\n    },\n  ],\n};\n\nconst Permissions = {\n  UPGRADE_PERMISSION: \"UPGRADE_PERMISSION\",\n  UPGRADE_PLUGIN_PERMISSION: \"UPGRADE_PLUGIN_PERMISSION\",\n  SET_METADATA_PERMISSION: \"SET_METADATA_PERMISSION\",\n  EXECUTE_PERMISSION: \"EXECUTE_PERMISSION\",\n  WITHDRAW_PERMISSION: \"WITHDRAW_PERMISSION\",\n  SET_SIGNATURE_VALIDATOR_PERMISSION: \"SET_SIGNATURE_VALIDATOR_PERMISSION\",\n  SET_TRUSTED_FORWARDER_PERMISSION: \"SET_TRUSTED_FORWARDER_PERMISSION\",\n  ROOT_PERMISSION: \"ROOT_PERMISSION\",\n  CREATE_VERSION_PERMISSION: \"CREATE_VERSION_PERMISSION\",\n  REGISTER_PERMISSION: \"REGISTER_PERMISSION\",\n  REGISTER_DAO_PERMISSION: \"REGISTER_DAO_PERMISSION\",\n  REGISTER_ENS_SUBDOMAIN_PERMISSION: \"REGISTER_ENS_SUBDOMAIN_PERMISSION\",\n  MINT_PERMISSION: \"MINT_PERMISSION\",\n  MERKLE_MINT_PERMISSION: \"MERKLE_MINT_PERMISSION\",\n  MODIFY_ALLOWLIST_PERMISSION: \"MODIFY_ALLOWLIST_PERMISSION\",\n  SET_CONFIGURATION_PERMISSION: \"SET_CONFIGURATION_PERMISSION\",\n};\n\nconst PermissionIds = Object.entries(Permissions).reduce(\n  (acc, [k, v]) => ({ ...acc, [k + \"_ID\"]: keccak256(toUtf8Bytes(v)) }),\n  {} as { [k: string]: string },\n);\nObject.freeze(Permissions);\nexport { Permissions };\nObject.freeze(PermissionIds);\nexport { PermissionIds };\nexport const IPFS_CID_REGEX =\n  /^((Qm[1-9A-HJ-NP-Za-km-z]{44,})|(b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,})|(z[1-9A-HJ-NP-Za-km-z]{48,})|(F[0-9A-F]{50,}))$/;\n\nexport const IPFS_URI_REGEX =\n  /^ipfs:\\/\\/((Qm[1-9A-HJ-NP-Za-km-z]{44,})|(b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,})|(z[1-9A-HJ-NP-Za-km-z]{48,})|(F[0-9A-F]{50,}))$/;\nexport const OSX_PROPOSAL_ID_REGEX =\n  /^(0x[A-Fa-f0-9]{40})_(0x[A-Fa-f0-9]{1,64})$/;\nexport const HEX_STRING_REGEX = /^(0x)?[0-9a-fA-F]*$/;\nexport const ENS_REGEX = /^(?:[a-z0-9-]+\\.)*[a-z0-9-]+\\.eth$/;\nexport const SUBDOMAIN_REGEX = /^[a-z0-9-]+$/;\n","import { gql } from \"graphql-request\";\n\nexport const QueryStatus = gql`\n{\n  _meta{\n    deployment\n  }\n}\n`;\n","import { gql } from \"graphql-request\";\n\nexport const QueryIPlugin = gql`\nquery IPlugin($address: ID!, $where: IPlugin_filter!) {\n\tiplugin(id:$address, where:$where) {\n    installations(where:{state: Installed}) {\n      appliedPreparation {\n        helpers\n        pluginRepo {\n          id\n        }\n      }\n     \tappliedVersion {\n        metadata\n        build\n        release {\n          release\n        }\n      }\n    }   \n  }\n}\n`;\n","class SdkError extends Error {\n  public cause?: Error | string;\n  constructor(message: string, cause?: any) {\n    super(message);\n    if (typeof cause === \"string\") {\n      this.cause = cause;\n    } else if (cause instanceof Error) {\n      this.cause = cause.message;\n    }\n  }\n}\n\nexport class TimeoutError extends SdkError {\n  constructor(message?: string, cause?: any) {\n    super(message ? message : \"Time out\", cause);\n  }\n}\nexport class UnsupportedProtocolError extends SdkError {\n  constructor(protocol: string, cause?: any) {\n    super(\"Unsupported protocol: \" + protocol, cause);\n  }\n}\nexport class GraphQLError extends SdkError {\n  constructor(model: string, cause?: any) {\n    super(\"Cannot fetch the \" + model + \" data from GraphQL\", cause);\n  }\n}\nexport class IpfsError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Cannot add or get data from ipfs\", cause);\n  }\n}\nexport class InvalidAddressOrEnsError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid address or ENS\", cause);\n  }\n}\nexport class InvalidAddressError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid address\", cause);\n  }\n}\nexport class InvalidCidError extends SdkError {\n  constructor(cause?: any) {\n    super(\"The value does not contain a valid CiD\", cause);\n  }\n}\nexport class InvalidProposalIdError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid proposal ID\", cause);\n  }\n}\nexport class NoProviderError extends SdkError {\n  constructor(cause?: any) {\n    super(\"A web3 provider is needed\", cause);\n  }\n}\nexport class NoSignerError extends SdkError {\n  constructor(cause?: any) {\n    super(\"A signer is needed\", cause);\n  }\n}\nexport class UnexpectedActionError extends SdkError {\n  constructor(cause?: any) {\n    super(\"The received action is different from the expected one\", cause);\n  }\n}\n\nexport class NoTokenAddress extends SdkError {\n  constructor(cause?: any) {\n    super(\"A token address is needed\", cause);\n  }\n}\n\nexport class NoDaoFactory extends SdkError {\n  constructor(cause?: any) {\n    super(\"A dao factory address is needed\", cause);\n  }\n}\n\nexport class NoPluginRepoRegistry extends SdkError {\n  constructor(cause?: any) {\n    super(\"A plugin repo registry address is needed\", cause);\n  }\n}\n\nexport class NoDaoRegistry extends SdkError {\n  constructor(cause?: any) {\n    super(\"A dao registry address is needed\", cause);\n  }\n}\n\nexport class IpfsPinError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Failed to pin data on IPFS\", cause);\n  }\n}\n\nexport class ProposalCreationError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Failed to create proposal\", cause);\n  }\n}\nexport class DaoCreationError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Failed to create DAO\", cause);\n  }\n}\n\nexport class MissingExecPermissionError extends SdkError {\n  constructor(cause?: any) {\n    super(\"No plugin requests EXECUTE_PERMISSION\", cause);\n  }\n}\nexport class IpfsFetchError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Failed to fetch data from IPFS\", cause);\n  }\n}\nexport class InvalidVotingModeError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid voting mode\", cause);\n  }\n}\nexport class UpdateAllowanceError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Could not define a minimum allowance\", cause);\n  }\n}\nexport class InvalidPrecisionError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid precision, number must be an integer greater than 0\", cause);\n  }\n}\nexport class FailedDepositError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Failed to deposit\", cause);\n  }\n}\nexport class AmountMismatchError extends SdkError {\n  constructor(expected: bigint, received: bigint, cause?: any) {\n    super(\n      `Deposited amount mismatch. Expected: ${expected}, received: ${received}`,\n      cause,\n    );\n  }\n}\nexport class UnsupportedNetworkError extends SdkError {\n  constructor(network: string, cause?: any) {\n    super(\"Unsupported network: \" + network, cause);\n  }\n}\nexport class ClientNotInitializedError extends SdkError {\n  constructor(client: string, cause?: any) {\n    super(client + \" client is not initialized\", cause);\n  }\n}\nexport class NoNodesAvailableError extends SdkError {\n  constructor(name: string, cause?: any) {\n    super(\"No \" + name + \" nodes available\", cause);\n  }\n}\n\nexport class PluginInstallationPreparationError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Failed to install plugin\", cause);\n  }\n}\nexport class DataDecodingError extends SdkError {\n  constructor(message: string, cause?: any) {\n    super(\"Cannot decode data: \" + message, cause);\n  }\n}\n\nexport class InvalidContractAddressError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid contract address\", cause);\n  }\n}\nexport class InvalidContractAbiError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid contract ABI\", cause);\n  }\n}\nexport class CannotEstimateGasError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Cannot estimate gas error\", cause);\n  }\n}\nexport class InstallationNotFoundError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Installation not found\", cause);\n  }\n}\nexport class PluginUninstallationPreparationError extends SdkError {\n  constructor(cause?: any) {\n    super(\"plugin uninstallation error\", cause);\n  }\n}\n\nexport class MissingMetadataError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Missing metadata\", cause);\n  }\n}\n\nexport class InvalidPrepareUninstallationAbiError extends SdkError {\n  constructor(cause?: Error) {\n    super(\"Invalid prepare uninstallation ABI\", cause);\n  }\n}\n\nexport class InvalidEnsError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid subdomain format: use a-z, 0-9 and -\", cause);\n  }\n}\n\nexport class DepositNativeTokenError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Please, use the token's transfer function directly\", cause);\n  }\n}\nexport class AlwaysFailingProposalError extends SdkError {\n  constructor(cause?: Error) {\n    super(\n      \"invalid actions, the types or order of the actions may cause the execution to fail\",\n      cause,\n    );\n  }\n}\n\nexport class SizeMismatchError extends SdkError {\n  constructor(field1: string, field2: string, cause?: Error) {\n    super(`Size mismatch: ${field1} and ${field2} should match`, cause);\n  }\n}\n\nexport class InvalidProposalStatusError extends SdkError {\n  constructor(cause?: Error) {\n    super(\"Invalid proposal status\", cause);\n  }\n}\n\nexport class NotImplementedError extends SdkError {\n  constructor(message?: string, cause?: Error) {\n    super(`Not implemented: ${message}`, cause);\n  }\n}\n\nexport class InvalidActionError extends SdkError {\n  constructor(cause?: Error) {\n    super(\"The received action is not recognized\", cause);\n  }\n}\n\nexport class InvalidSubdomainError extends SdkError {\n  constructor(cause?: Error) {\n    super(\"Invalid subdomain format: use a-z, 0-9 and -\", cause);\n  }\n}\n\nexport class InvalidGasEstimationFactorError extends SdkError {\n  constructor(cause?: Error) {\n    super(\n      \"Gas estimation factor value should be a number between 0 and 1\",\n      cause,\n    );\n  }\n}\nexport class InvalidParameter extends SdkError {\n  constructor(message?: string, cause?: Error) {\n    super(\n      \"Invalid parameter:\" + message,\n      cause,\n    );\n  }\n}\nexport class NotAContractError extends SdkError {\n  constructor(cause?: Error) {\n    super(\n      \"The provided address does not point to a contract\",\n      cause,\n    );\n  }\n}\n\nexport class InvalidVersionError extends SdkError {\n  constructor(cause?: string) {\n    super(\n      \"The new version and the current version should have the same release number and the new build number should be greater than the current build number\",\n      cause,\n    );\n  }\n}\nexport class PluginUpdatePreparationError extends SdkError {\n  constructor(cause?: string) {\n    super(\n      \"Failed to prepare plugin update\",\n      cause,\n    );\n  }\n}\nexport class ProposalNotFoundError extends SdkError {\n  constructor(cause?: any) {\n    super(\"Proposal not found\", cause);\n  }\n}\n\nexport class InvalidArraySizeError extends SdkError {\n  constructor(size: number, cause?: any) {\n    super(`Invalid array size: ${size}`, cause);\n  }\n}\n\nexport class InvalidRatioValueError extends SdkError {\n  constructor(ratio: number, cause?: any) {\n    super(\n      `The ratio value should range between 0 and 1, received value: ${ratio}`,\n      cause,\n    );\n  }\n}\n\nexport class InvalidDigitsValueError extends SdkError {\n  constructor(digits: number, cause?: any) {\n    super(\n      `The number of digits should range between 1 and 15, received value: ${digits}`,\n      cause,\n    );\n  }\n}\n\nexport class ValueOutOfRangeError extends SdkError {\n  constructor(cause?: any) {\n    super(\n      `The value is out of range`,\n      cause,\n    );\n  }\n}\n\nexport class InvalidBitMapValueError extends SdkError {\n  constructor(cause?: any) {\n    super(\n      \"The bitmap value is too big\",\n      cause,\n    );\n  }\n}\n\nexport class EmptyMultiUriError extends SdkError {\n  constructor(cause?: any) {\n    super(\n      \"The multi URI is empty\",\n      cause,\n    );\n  }\n}\n\nexport class InvalidPromiseError extends SdkError {\n  constructor(cause?: any) {\n    super(\n      \"Invalid promise\",\n      cause,\n    );\n  }\n}\n\nexport class InvalidTimeoutError extends SdkError {\n  constructor(cause?: any) {\n    super(\n      \"Invalid timeout\",\n      cause,\n    );\n  }\n}\n\nexport class InvalidPermissionOperationType extends SdkError {\n  constructor(cause?: any) {\n    super(\"Invalid permission operation\", cause);\n  }\n}\n\nexport class ContractNotDeployedError extends SdkError {\n  constructor(\n    contractName: string,\n    version: string,\n    network: string,\n    cause?: any,\n  ) {\n    super(\n      `Contract \"${contractName}\" version \"${version}\" is not deployed on network \"${network}\"`,\n      cause,\n    );\n  }\n}\n","import { IPFS_CID_REGEX } from \"./constants\";\nimport { EmptyMultiUriError } from \"./errors\";\n\n/**\n * Parses a multi URI and returns the IPFS or HTTP URI.\n *\n * @export\n * @class MultiUri\n */\nexport class MultiUri {\n  readonly items: string[] = [];\n\n  constructor(multiUri: string) {\n    if (!multiUri) throw new EmptyMultiUriError();\n    this.items = multiUri.split(\",\");\n  }\n\n  get ipfsCid() {\n    for (let item of this.items) {\n      if (IPFS_CID_REGEX.test(item)) return item;\n      else if (item.startsWith(\"ipfs://\")) {\n        item = item.substring(7);\n      }\n      const idx = item.indexOf(\"/\");\n      const cid = (idx < 0) ? item : item.substring(0, idx);\n\n      if (!IPFS_CID_REGEX.test(cid)) continue;\n      return cid;\n    }\n    return null;\n  }\n  get ipfs() {\n    for (let item of this.items) {\n      if (IPFS_CID_REGEX.test(item)) return { cid: item, path: \"\" };\n      else if (item.startsWith(\"ipfs://\")) {\n        item = item.substring(7);\n      }\n      let pathIdx = item.indexOf(\"/\");\n\n      let cid = item;\n      if (pathIdx < 0) {\n        if (!IPFS_CID_REGEX.test(cid)) continue;\n        return { cid, path: \"\" };\n      }\n      cid = item.substring(0, pathIdx);\n      if (!IPFS_CID_REGEX.test(cid)) continue;\n\n      let searchIdx = item.indexOf(\"?\");\n      if (searchIdx < 0) searchIdx = item.indexOf(\"#\");\n\n      if (searchIdx < 0) {\n        return {\n          cid,\n          path: item.substring(pathIdx),\n        };\n      }\n\n      return {\n        cid,\n        path: item.substring(pathIdx, searchIdx),\n      };\n    }\n    return null;\n  }\n  get http() {\n    return this.items.filter((item) =>\n      item.startsWith(\"http://\") || item.startsWith(\"https://\")\n    );\n  }\n}\n","import {\n  ENS_REGEX,\n  IPFS_URI_REGEX,\n  OSX_PROPOSAL_ID_REGEX,\n  SUBDOMAIN_REGEX,\n} from \"./constants\";\nimport { InvalidCidError } from \"./errors\";\nimport { MultiUri } from \"./multiuri\";\n\n/**\n * Attempts to parse the given string as a URL and returns the IPFS CiD contained in it.\n * Alternatively it tries to use the raw value after validating it.\n *\n * @export\n * @param {string} data\n * @return {string}\n */\nexport function resolveIpfsCid(data: string): string {\n  const uri = new MultiUri(data);\n  const cid = uri.ipfsCid;\n  if (!cid) {\n    throw new InvalidCidError();\n  }\n  return cid;\n}\n\n/**\n * Checks if the given string is a valid proposal ID\n *\n * @export\n * @param {string} proposalId\n * @return {boolean}\n */\nexport function isProposalId(proposalId: string): boolean {\n  const regex = new RegExp(OSX_PROPOSAL_ID_REGEX);\n  return regex.test(proposalId);\n}\n\n/**\n * Checks if the given string is a valid ENS name\n *\n * @export\n * @param {string} name\n * @return {boolean}\n */\nexport function isEnsName(name: string): boolean {\n  const regex = new RegExp(ENS_REGEX);\n  return regex.test(name);\n}\n\n/**\n * Checks if the given string is a valid IPFS URI\n *\n * @export\n * @param {string} cid\n * @return {boolean}\n */\nexport function isIpfsUri(cid: string): boolean {\n  const regex = new RegExp(\n    IPFS_URI_REGEX,\n  );\n  return regex.test(cid);\n}\n\n/**\n * Checks if the given string is a valid subdomain\n *\n * @export\n * @param {string} name\n * @return {boolean}\n */\nexport function isSubdomain(name: string): boolean {\n  const regex = new RegExp(SUBDOMAIN_REGEX);\n  return regex.test(name);\n}\n","import { hexZeroPad } from \"@ethersproject/bytes\";\nimport { HEX_STRING_REGEX, OSX_PROPOSAL_ID_REGEX } from \"./constants\";\nimport { isProposalId } from \"./validation\";\nimport {\n  InvalidArraySizeError,\n  InvalidBitMapValueError,\n  InvalidDigitsValueError,\n  InvalidProposalIdError,\n  InvalidRatioValueError,\n  ValueOutOfRangeError,\n} from \"./errors\";\n\n/**\n * Ensures that a hex string has the \"0x\" prefix\n *\n * @export\n * @param {string} value\n * @return {string}\n */\nexport function ensure0x(value: string): string {\n  return value.startsWith(\"0x\") ? value : \"0x\" + value;\n}\n\n/**\n * Strips the \"0x\" prefix from a hex string\n *\n * @export\n * @param {string} value\n * @return {string}\n */\nexport function strip0x(value: string): string {\n  return value.startsWith(\"0x\") ? value.substring(2) : value;\n}\n\n/**\n * Encodes a buffer into a hex string with the \"0x\" prefix\n *\n * @export\n * @param {string} hexString\n * @return {Uint8Array}\n */\nexport function hexToBytes(hexString: string): Uint8Array {\n  if (!hexString) return new Uint8Array();\n  else if (!HEX_STRING_REGEX.test(hexString)) {\n    throw new Error(\"Invalid hex string\");\n  } else if (hexString.length % 2 !== 0) {\n    throw new Error(\"The hex string has an odd length\");\n  }\n\n  hexString = strip0x(hexString);\n  const bytes = [];\n  for (let i = 0; i < hexString.length; i += 2) {\n    bytes.push(\n      parseInt(hexString.substring(i, i + 2), 16),\n    );\n  }\n  return Uint8Array.from(bytes);\n}\n\n/**\n * Encodes a buffer into a hex string with the \"0x\" prefix\n *\n * @export\n * @param {Uint8Array} buff\n * @param {boolean} [skip0x]\n * @return {string}\n */\nexport function bytesToHex(buff: Uint8Array, skip0x?: boolean): string {\n  const bytes: string[] = [];\n  for (let i = 0; i < buff.length; i++) {\n    if (buff[i] >= 16) bytes.push(buff[i].toString(16));\n    else bytes.push(\"0\" + buff[i].toString(16));\n  }\n  if (skip0x) return bytes.join(\"\");\n  return ensure0x(bytes.join(\"\"));\n}\n\n/**\n * Encodes a 0-1 ratio within the given digit precision for storage on a smart contract\n *\n * @export\n * @param {number} ratio\n * @param {number} digits\n * @return {bigint}\n */\nexport function encodeRatio(ratio: number, digits: number): number {\n  if (ratio < 0 || ratio > 1) {\n    throw new InvalidRatioValueError(ratio);\n  } else if (!Number.isInteger(digits) || digits < 1 || digits > 15) {\n    throw new InvalidDigitsValueError(digits);\n  }\n  return Math.round(ratio * (10 ** digits));\n}\n\n/**\n * Decodes a value received from a smart contract to a number with\n *\n * @export\n * @param {bigint} onChainValue\n * @param {number} digits\n * @return {number}\n */\nexport function decodeRatio(\n  onChainValue: bigint | number,\n  digits: number,\n): number {\n  if (!Number.isInteger(digits) || digits < 1 || digits > 15) {\n    throw new InvalidDigitsValueError(digits);\n  } else if (onChainValue > 10 ** digits) {\n    throw new ValueOutOfRangeError();\n  }\n\n  return Number(onChainValue) / (10 ** digits);\n}\n\n/**\n * Encodes the particles of a proposalId into a globally unique value for subgraph\n *\n * @export\n * @param {string} pluginAddress\n * @param {number} id\n * @return {string} proposalId\n */\nexport function encodeProposalId(pluginAddress: string, id: number) {\n  if (!/^0x[A-Fa-f0-9]{40}$/.test(pluginAddress)) {\n    throw new Error(\"Invalid address\");\n  }\n\n  return `${pluginAddress}_0x${id.toString(16)}`;\n}\n\n/**\n * Decodes a proposalId from subgraph and returns the original pluginAddress and the nonce\n *\n * @export\n * @param {string} proposalId \n * @return {object} pluginAddress: string; id: number\n */\nexport function decodeProposalId(\n  proposalId: string,\n): { pluginAddress: string; id: number } {\n  if (!isProposalId(proposalId)) {\n    throw new InvalidProposalIdError();\n  }\n\n  const matchedRegexResult = proposalId.match(OSX_PROPOSAL_ID_REGEX) || [];\n  if (matchedRegexResult.length !== 3) {\n    throw new InvalidProposalIdError();\n  }\n\n  return {\n    pluginAddress: matchedRegexResult[1],\n    id: parseInt(strip0x(matchedRegexResult[2]), 16),\n  };\n}\n\n/**\n * Transforms an array of booleans into a bitmap big integer\n *\n * @export\n * @param {Array<boolean>} [bools]\n * @return {BigInt} bitmap\n */\nexport function boolArrayToBitmap(bools?: Array<boolean>) {\n  if (!bools || !bools.length) return BigInt(0);\n  else if (bools.length > 256) throw new InvalidArraySizeError(bools.length);\n\n  let result = BigInt(0);\n  for (let i = 0; i < 256; i++) {\n    if (!bools[i]) continue;\n    result |= BigInt(1) << BigInt(i);\n  }\n\n  return result;\n}\n\n/**\n * Transforms a bigint into an array of booleans\n *\n * @param {bigint} bitmap\n * @return {Array<boolean>}\n */\nexport function bitmapToBoolArray(bitmap: bigint): Array<boolean> {\n  if (bitmap >= (BigInt(1) << BigInt(256))) {\n    throw new InvalidBitMapValueError();\n  }\n\n  const result: Array<boolean> = [];\n  for (let i = 0; i < 256; i++) {\n    const mask = BigInt(1) << BigInt(i);\n    result.push((bitmap & mask) != BigInt(0));\n  }\n\n  return result;\n}\n\n/**\n * Gets the extended version of a proposal id from the compact one\n *\n * @export\n * @param {string} proposalId\n * @returns {string}\n */\nexport const getExtendedProposalId = (proposalId: string): string => {\n  if (!isProposalId(proposalId)) {\n    throw new InvalidProposalIdError();\n  }\n  const splits = proposalId.split(\"_\");\n  return splits[0].toLowerCase() + \"_\" + hexZeroPad(splits[1], 32);\n};\n\n/**\n * Gets the compact version of a proposal id from the extended one\n *\n * @export\n * @param {string} proposalId\n * @returns {string}\n */\nexport const getCompactProposalId = (proposalId: string): string => {\n  if (!proposalId.match(/^(0x[A-Fa-f0-9]{40})_(0x[A-Fa-f0-9]{1,64})$/)) {\n    throw new Error(\"Invalid proposalId\");\n  }\n  const splits = proposalId.split(\"_\");\n  return splits[0].toLowerCase() + \"_0x\" + parseInt(splits[1]).toString(16);\n};\n","import {\n  defaultAbiCoder,\n  FunctionFragment,\n  Interface,\n} from \"@ethersproject/abi\";\nimport { id } from \"@ethersproject/hash\";\nimport {\n  getNetwork as ethersGetNetwork,\n  Log,\n  Networkish,\n} from \"@ethersproject/providers\";\nimport { ContractReceipt } from \"@ethersproject/contracts\";\nimport {\n  GasFeeEstimation,\n  MetadataAbiInput,\n  PrepareInstallationParams,\n  PrepareInstallationStep,\n  PrepareInstallationStepValue,\n  PrepareUpdateParams,\n  PrepareUpdateStep,\n  PrepareUpdateStepValue,\n} from \"./types\";\nimport {\n  IClientGraphQLCore,\n  IClientWeb3Core,\n  SubgraphPluginInstallation,\n} from \"./internal\";\nimport {\n  PluginRepo__factory,\n  PluginSetupProcessor,\n  PluginSetupProcessor__factory,\n} from \"@aragon/osx-ethers\";\nimport { IPFS_ENDPOINTS } from \"./constants\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Network } from \"@ethersproject/networks\";\nimport { QueryIPlugin } from \"./internal/graphql-queries\";\nimport { bytesToHex, hexToBytes } from \"./encoding\";\nimport {\n  InstallationNotFoundError,\n  InvalidAddressError,\n  InvalidVersionError,\n  PluginInstallationPreparationError,\n  PluginUpdatePreparationError,\n  UnsupportedNetworkError,\n} from \"./errors\";\nimport { Zero } from \"@ethersproject/constants\";\nimport {\n  FrameworkContractsNames,\n  getNetworkAlias,\n  getNetworkByChainId,\n  getNetworkByNameOrAlias,\n  getNetworkDeploymentForVersion,\n  NetworkConfig,\n  networks,\n  SupportedAliases,\n  SupportedNetworks,\n  SupportedVersions,\n} from \"@aragon/osx-commons-configs\";\n\n/**\n * Finds a log in a receipt given the event name\n *\n * @export\n * @param {ContractReceipt} receipt\n * @param {Interface} iface\n * @param {string} eventName\n * @return {(Log | undefined)}\n */\nexport function findLog(\n  receipt: ContractReceipt,\n  iface: Interface,\n  eventName: string,\n): Log | undefined {\n  return receipt.logs.find(\n    (log) =>\n      log.topics[0] ===\n        id(\n          iface.getEvent(eventName).format(\n            \"sighash\",\n          ),\n        ),\n  );\n}\n\n/**\n * Gets a function fragment from encoded data\n *\n * @export\n * @param {Uint8Array} data\n * @param {string[]} availableFunctions\n * @return {FunctionFragment}\n */\nexport function getFunctionFragment(\n  data: Uint8Array,\n  availableFunctions: string[],\n): FunctionFragment {\n  const hexBytes = bytesToHex(data);\n  const iface = new Interface(availableFunctions);\n  return iface.getFunction(hexBytes.substring(0, 10));\n}\n\n/**\n * Gets the named types from a metadata abi input\n *\n * @export\n * @param {MetadataAbiInput[]} [inputs=[]]\n * @return {string[]}\n */\nexport function getNamedTypesFromMetadata(\n  inputs: MetadataAbiInput[] = [],\n): string[] {\n  return inputs.map((input) => {\n    if (input.type.startsWith(\"tuple\")) {\n      const tupleResult = getNamedTypesFromMetadata(input.components).join(\n        \", \",\n      );\n\n      let tupleString = `tuple(${tupleResult})`;\n\n      if (input.type.endsWith(\"[]\")) {\n        tupleString = tupleString.concat(\"[]\");\n      }\n\n      return tupleString;\n    } else if (input.type.endsWith(\"[]\")) {\n      const baseType = input.type.slice(0, -2);\n      return `${baseType}[] ${input.name}`;\n    } else {\n      return `${input.type} ${input.name}`;\n    }\n  });\n}\n\n/**\n * Gets the named types from a metadata abi input\n *\n * @export\n * @param {IClientWeb3Core} web3\n * @param {PrepareInstallationParams} params\n * @return {Promise<GasFeeEstimation>}\n */\nexport async function prepareGenericInstallationEstimation(\n  web3: IClientWeb3Core,\n  params: PrepareInstallationParams,\n) {\n  const provider = web3.getProvider();\n  if (!isAddress(params.pluginRepo)) {\n    throw new InvalidAddressError();\n  }\n  const ethers5NetworkName = (await provider.getNetwork()).name;\n  const networkName = getNetworkByNameOrAlias(ethers5NetworkName)?.name;\n  if (!networkName) {\n    throw new UnsupportedNetworkError(ethers5NetworkName);\n  }\n  let version = params.version;\n  // if version is not specified install latest version\n  if (!version) {\n    const pluginRepo = PluginRepo__factory.connect(\n      params.pluginRepo,\n      provider,\n    );\n    const currentRelease = await pluginRepo.latestRelease();\n    const latestVersion = await pluginRepo[\"getLatestVersion(uint8)\"](\n      currentRelease,\n    );\n    version = latestVersion.tag;\n  }\n  // encode installation params\n  const { installationParams = [], installationAbi = [] } = params;\n  const data = defaultAbiCoder.encode(\n    getNamedTypesFromMetadata(installationAbi),\n    installationParams,\n  );\n  // connect to psp contract\n  const deployment = getNetworkDeploymentForVersion(\n    networkName,\n    SupportedVersions.V1_3_0,\n  );\n  if (!deployment) {\n    throw new UnsupportedNetworkError(networkName);\n  }\n  const pspContract = PluginSetupProcessor__factory.connect(\n    deployment[FrameworkContractsNames.PLUGIN_SETUP_PROCESSOR].address,\n    provider,\n  );\n\n  const gasEstimation = await pspContract.estimateGas.prepareInstallation(\n    params.daoAddressOrEns,\n    {\n      pluginSetupRef: {\n        pluginSetupRepo: params.pluginRepo,\n        versionTag: version,\n      },\n      data,\n    },\n  );\n  return web3.getApproximateGasFee(gasEstimation.toBigInt());\n}\n\n/**\n * Prepares an installation of a plugin\n *\n * @export\n * @param {IClientWeb3Core} web3\n * @param {(PrepareInstallationParams & { pluginSetupProcessorAddress: string })} params\n * @return {AsyncGenerator<PrepareInstallationStepValue>}\n */\nexport async function* prepareGenericInstallation(\n  web3: IClientWeb3Core,\n  params: PrepareInstallationParams & { pluginSetupProcessorAddress: string },\n): AsyncGenerator<PrepareInstallationStepValue> {\n  const signer = web3.getConnectedSigner();\n  if (!isAddress(params.pluginRepo)) {\n    throw new InvalidAddressError();\n  }\n  let version = params.version;\n  // if version is not specified install latest version\n  if (!version) {\n    const pluginRepo = PluginRepo__factory.connect(\n      params.pluginRepo,\n      signer,\n    );\n    const currentRelease = await pluginRepo.latestRelease();\n    const latestVersion = await pluginRepo[\"getLatestVersion(uint8)\"](\n      currentRelease,\n    );\n    version = latestVersion.tag;\n  }\n  // encode installation params\n  const { installationParams = [], installationAbi = [] } = params;\n  const data = defaultAbiCoder.encode(\n    getNamedTypesFromMetadata(installationAbi),\n    installationParams,\n  );\n  // connect to psp contract\n  const pspContract = PluginSetupProcessor__factory.connect(\n    params.pluginSetupProcessorAddress,\n    signer,\n  );\n  const tx = await pspContract.prepareInstallation(params.daoAddressOrEns, {\n    pluginSetupRef: {\n      pluginSetupRepo: params.pluginRepo,\n      versionTag: version,\n    },\n    data,\n  });\n\n  yield {\n    key: PrepareInstallationStep.PREPARING,\n    txHash: tx.hash,\n  };\n\n  const receipt = await tx.wait();\n  const pspContractInterface = PluginSetupProcessor__factory\n    .createInterface();\n  const log = findLog(\n    receipt,\n    pspContractInterface,\n    \"InstallationPrepared\",\n  );\n  if (!log) {\n    throw new PluginInstallationPreparationError();\n  }\n  const parsedLog = pspContractInterface.parseLog(log);\n  const pluginAddress = parsedLog.args[\"plugin\"];\n  const preparedSetupData = parsedLog.args[\"preparedSetupData\"];\n  if (!(pluginAddress || preparedSetupData)) {\n    throw new PluginInstallationPreparationError();\n  }\n  yield {\n    key: PrepareInstallationStep.DONE,\n    pluginAddress,\n    pluginRepo: params.pluginRepo,\n    versionTag: version,\n    permissions: preparedSetupData.permissions,\n    helpers: preparedSetupData.helpers,\n  };\n}\n\n/**\n * Gets the parameters to be given when preparing an update\n *\n * @param {IClientGraphQLCore} graphql\n * @param {PrepareUpdateParams} params\n * @return {Promise<PluginSetupProcessor.PrepareUpdateParamsStruct>}\n */\nasync function getPrepareUpdateParams(\n  graphql: IClientGraphQLCore,\n  params: PrepareUpdateParams,\n): Promise<PluginSetupProcessor.PrepareUpdateParamsStruct> {\n  type T = {\n    iplugin: { installations: SubgraphPluginInstallation[] };\n  };\n  const { iplugin } = await graphql.request<T>({\n    query: QueryIPlugin,\n    params: {\n      address: params.pluginAddress.toLowerCase(),\n      where: { dao: params.daoAddressOrEns.toLowerCase() },\n    },\n    name: \"plugin\",\n  });\n\n  // filter specified installation\n  const { pluginInstallationIndex = 0 } = params;\n  const selectedInstallation = iplugin.installations[pluginInstallationIndex];\n  if (!selectedInstallation) {\n    throw new InstallationNotFoundError();\n  }\n  // check if version is valid\n  if (\n    params.newVersion.release !==\n      selectedInstallation.appliedVersion.release.release ||\n    params.newVersion.build <= selectedInstallation.appliedVersion.build\n  ) {\n    throw new InvalidVersionError();\n  }\n  // encode update params\n  const { updateParams = [], updateAbi = [] } = params;\n  const data = defaultAbiCoder.encode(\n    getNamedTypesFromMetadata(updateAbi),\n    updateParams,\n  );\n  return {\n    currentVersionTag: {\n      build: selectedInstallation.appliedVersion.build,\n      release: selectedInstallation.appliedVersion.release.release,\n    },\n    newVersionTag: params.newVersion,\n    pluginSetupRepo: params.pluginRepo,\n    setupPayload: {\n      plugin: params.pluginAddress,\n      currentHelpers: selectedInstallation.appliedPreparation.helpers,\n      data,\n    },\n  };\n}\n\n/**\n * Gets an estimation of the gas fee of preparing an update\n *\n * @export\n * @param {IClientWeb3Core} web3\n * @param {IClientGraphQLCore} graphql\n * @param {(PrepareUpdateParams & { pluginSetupProcessorAddress: string })} params\n * @return {Promise<GasFeeEstimation>}\n */\nexport async function prepareGenericUpdateEstimation(\n  web3: IClientWeb3Core,\n  graphql: IClientGraphQLCore,\n  params: PrepareUpdateParams & { pluginSetupProcessorAddress: string },\n): Promise<GasFeeEstimation> {\n  const signer = web3.getConnectedSigner();\n  const prepareUpdateParams = await getPrepareUpdateParams(graphql, params);\n  // connect to psp contract\n  const pspContract = PluginSetupProcessor__factory.connect(\n    params.pluginSetupProcessorAddress,\n    signer,\n  );\n  const gasEstimation = await pspContract.estimateGas.prepareUpdate(\n    params.daoAddressOrEns,\n    prepareUpdateParams,\n  );\n  return web3.getApproximateGasFee(gasEstimation.toBigInt());\n}\n\nexport async function* prepareGenericUpdate(\n  web3: IClientWeb3Core,\n  graphql: IClientGraphQLCore,\n  params: PrepareUpdateParams & {\n    pluginSetupProcessorAddress: string;\n  },\n): AsyncGenerator<PrepareUpdateStepValue> {\n  const signer = web3.getConnectedSigner();\n  const prepareUpdateParams = await getPrepareUpdateParams(graphql, params);\n  // connect to psp contract\n  const pspContract = PluginSetupProcessor__factory.connect(\n    params.pluginSetupProcessorAddress,\n    signer,\n  );\n\n  const tx = await pspContract.prepareUpdate(\n    params.daoAddressOrEns,\n    prepareUpdateParams,\n  );\n  yield {\n    key: PrepareUpdateStep.PREPARING,\n    txHash: tx.hash,\n  };\n  const receipt = await tx.wait();\n  const pspContractInterface = PluginSetupProcessor__factory\n    .createInterface();\n  const log = findLog(\n    receipt,\n    pspContractInterface,\n    \"UpdatePrepared\",\n  );\n  if (!log) {\n    throw new PluginUpdatePreparationError();\n  }\n  const parsedLog = pspContractInterface.parseLog(log);\n  const versionTag = parsedLog.args[\"versionTag\"];\n  const preparedSetupData = parsedLog.args[\"preparedSetupData\"];\n  const initData = parsedLog.args[\"initData\"];\n  if (\n    !versionTag || versionTag.build !== params.newVersion.build ||\n    versionTag.release !== params.newVersion.release || !preparedSetupData ||\n    !initData\n  ) {\n    throw new PluginUpdatePreparationError();\n  }\n  yield {\n    key: PrepareUpdateStep.DONE,\n    versionTag,\n    pluginRepo: params.pluginRepo,\n    pluginAddress: params.pluginAddress,\n    initData: hexToBytes(initData),\n    permissions: preparedSetupData.permissions,\n    helpers: preparedSetupData.helpers,\n  };\n}\n\n/**\n * Replacing function for ethers getNetwork that includes additional networks\n *\n * @export\n * @param {Networkish} networkish\n * @return {Network}\n */\nexport function getNetwork(networkish: Networkish): Network {\n  let network: Network | null = null;\n  try {\n    network = ethersGetNetwork(networkish);\n  } catch {}\n  try {\n    network = aragonGetNetwork(networkish);\n  } catch {}\n  if (!network) {\n    throw new UnsupportedNetworkError(networkish.toString());\n  }\n  return network;\n}\n\n/**\n * When ethers 5 does not support the network return a Network object\n * using our osx-commons-configs as a source of truth\n *\n * @private\n * @param {Networkish} networkish\n * @return {*}  {Network}\n */\nfunction aragonGetNetwork(networkish: Networkish): Network | null {\n  let aragonNetwork: NetworkConfig | null = null;\n  let network: Network | null = null;\n  switch (typeof networkish) {\n    case \"string\":\n    case \"number\": {\n      if (typeof networkish === \"number\") {\n        aragonNetwork = getNetworkByChainId(networkish);\n      } else {\n        aragonNetwork = getNetworkByNameOrAlias(networkish);\n      }\n      if (!aragonNetwork) {\n        throw new UnsupportedNetworkError(networkish.toString());\n      }\n      const ethers5Alias = getNetworkAlias(\n        SupportedAliases.ETHERS_5,\n        aragonNetwork.name,\n      );\n      const networkDeployment = getNetworkDeploymentForVersion(\n        aragonNetwork.name,\n        SupportedVersions.V1_3_0,\n      );\n      if (!networkDeployment) {\n        throw new UnsupportedNetworkError(aragonNetwork.name);\n      }\n      const ensRegistryAddress = networkDeployment.ENSRegistry?.address;\n      network = {\n        name: ethers5Alias || aragonNetwork.name,\n        chainId: aragonNetwork.chainId,\n        ensAddress: ensRegistryAddress,\n      };\n      break;\n    }\n    case \"object\":\n      if (networkish.name && networkish.chainId) {\n        network = networkish;\n      }\n      break;\n    default:\n      throw new UnsupportedNetworkError(networkish);\n  }\n  return network;\n}\n\n/**\n * Gets the interfaceId of a given interface\n *\n * @export\n * @param {Interface} iface\n * @return {string}\n */\nexport function getInterfaceId(iface: Interface): string {\n  let interfaceId = Zero;\n  const functions: string[] = Object.keys(iface.functions);\n  for (const func of functions) {\n    interfaceId = interfaceId.xor(iface.getSighash(func));\n  }\n  return interfaceId.toHexString();\n}\n\nexport function getDefaultIpfsNodes(network: SupportedNetworks) {\n  return networks[network].isTestnet\n    ? IPFS_ENDPOINTS.test\n    : IPFS_ENDPOINTS.prod;\n}\n\nexport function getDefaultGraphqlNodes(network: SupportedNetworks) {\n  return [{\n    url:\n      `https://subgraph.satsuma-prod.com/qHR2wGfc5RLi6/aragon/osx-${network}/version/v1.4.0/api`,\n  }];\n}\n","import { JsonRpcProvider, Network, Networkish } from \"@ethersproject/providers\";\nimport { Client as IpfsClient } from \"@aragon/sdk-ipfs\";\nimport { GraphQLClient } from \"graphql-request\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { ContextParams, ContextState, OverriddenState } from \"./types\";\nimport {\n  getDefaultGraphqlNodes,\n  getDefaultIpfsNodes,\n  getNetwork,\n} from \"./utils\";\nimport {\n  InvalidAddressError,\n  InvalidGasEstimationFactorError,\n  UnsupportedNetworkError,\n  UnsupportedProtocolError,\n} from \"./errors\";\nimport {\n  FrameworkContractsNames,\n  getNetworkDeploymentForVersion,\n  getNetworkNameByAlias,\n  NonFrameworkContractsNames,\n  SupportedVersions,\n} from \"@aragon/osx-commons-configs\";\n\nconst DEFAULT_GAS_FEE_ESTIMATION_FACTOR = 0.625;\nconst supportedProtocols = [\"https:\"];\nconst contractNames = [\n  ...Object.values(FrameworkContractsNames),\n  ...Object.values(NonFrameworkContractsNames),\n] as (FrameworkContractsNames | NonFrameworkContractsNames)[];\nif (typeof process !== \"undefined\" && process?.env?.TESTING) {\n  supportedProtocols.push(\"http:\");\n}\n\nexport abstract class ContextCore {\n  protected state: ContextState = {} as ContextState;\n\n  protected overriden: OverriddenState = contractNames.reduce(\n    (acc, key) => ({ ...acc, [key]: false }),\n    { ENSRegistry: false } as OverriddenState,\n  );\n  // INTERNAL CONTEXT STATE\n  /**\n   * @param {Object} params\n   *\n   * @constructor\n   */\n  constructor(params?: Partial<ContextParams>) {\n    // set network to mainnet, overrided by the value of params\n    const mergedParams = Object.assign({ network: \"mainnet\" }, params);\n    this.set(mergedParams);\n  }\n\n  set(contextParams: Partial<ContextParams>) {\n    if (contextParams.network) {\n      this.state.network = ContextCore.resolveNetwork(\n        contextParams.network,\n        contextParams.ENSRegistry,\n      );\n      // once the network is resolved set default values\n      this.setNetworkDefaults();\n    }\n    if (contextParams.signer) {\n      this.state.signer = contextParams.signer;\n    }\n    if (\n      contextParams.web3Providers ||\n      (Array.isArray(contextParams.web3Providers) &&\n        contextParams.web3Providers.length)\n    ) {\n      this.state.web3Providers = ContextCore.resolveWeb3Providers(\n        contextParams.web3Providers,\n        this.state.network,\n      );\n    }\n    if (contextParams.graphqlNodes?.length) {\n      this.state.graphql = ContextCore.resolveGraphql(\n        contextParams.graphqlNodes,\n      );\n      this.overriden.graphqlNodes = true;\n    }\n    if (contextParams.ipfsNodes?.length) {\n      this.state.ipfs = ContextCore.resolveIpfs(contextParams.ipfsNodes);\n      this.overriden.ipfsNodes = true;\n    }\n    // Set all the available addresses\n    for (const address of contractNames) {\n      if (contextParams[address]) {\n        this.state[address] = contextParams[address]!;\n        this.overriden[address] = true;\n      }\n    }\n\n    if (contextParams.gasFeeEstimationFactor) {\n      this.state.gasFeeEstimationFactor = ContextCore\n        .resolveGasFeeEstimationFactor(\n          contextParams.gasFeeEstimationFactor,\n        );\n      this.overriden.gasFeeEstimationFactor = true;\n    }\n  }\n\n  private setNetworkDefaults() {\n    // check network\n    const networkName = getNetworkNameByAlias(this.network.name);\n    if (!networkName) {\n      throw new UnsupportedNetworkError(this.network.name);\n    }\n    // set graphql nodes\n    if (!this.overriden.graphqlNodes) {\n      this.state.graphql = ContextCore.resolveGraphql(\n        getDefaultGraphqlNodes(networkName),\n      );\n    }\n    // set ipfs nodes\n    if (!this.overriden.ipfsNodes) {\n      this.state.ipfs = ContextCore.resolveIpfs(\n        getDefaultIpfsNodes(networkName),\n      );\n    }\n    // set contract addresses\n    for (const contractName of contractNames) {\n      if (!this.overriden[contractName]) {\n        let contractAddress: string | undefined;\n        // get deployment\n        let deployment = getNetworkDeploymentForVersion(\n          networkName,\n          SupportedVersions.V1_3_0,\n        );\n        // get address from deployment\n        if (deployment) {\n          contractAddress = deployment[contractName]?.address;\n        }\n        // custom check for ensRegistryAddress\n        // set the ensRegistryAddress to the network.ensAddress\n        if (\n          contractName === NonFrameworkContractsNames.ENS_REGISTRY &&\n          !contractAddress\n        ) {\n          contractAddress = this.network.ensAddress;\n        }\n        if (contractAddress) {\n          this.state[contractName] = contractAddress;\n        }\n      }\n    }\n\n    if (!this.overriden.gasFeeEstimationFactor) {\n      this.state.gasFeeEstimationFactor = DEFAULT_GAS_FEE_ESTIMATION_FACTOR;\n    }\n  }\n\n  // GETTERS\n\n  /**\n   * Getter for the network\n   *\n   * @var network\n   *\n   * @returns {Networkish}\n   *\n   * @public\n   */\n  get network() {\n    return this.state.network;\n  }\n  /**\n   * Getter for the Signer\n   *\n   * @var signer\n   *\n   * @returns {Signer}\n   *\n   * @public\n   */\n  get signer(): Signer {\n    return this.state.signer;\n  }\n\n  /**\n   * Getter for the web3 providers\n   *\n   * @var web3Providers\n   *\n   * @returns {JsonRpcProvider[]}\n   *\n   * @public\n   */\n  get web3Providers(): JsonRpcProvider[] {\n    return this.state.web3Providers || [];\n  }\n\n  /**\n   * Getter for the gas fee reducer used in estimations\n   *\n   * @var gasFeeEstimationFactor\n   *\n   * @returns {number}\n   *\n   * @public\n   */\n  get gasFeeEstimationFactor(): number {\n    return (\n      this.state.gasFeeEstimationFactor\n    );\n  }\n\n  /**\n   * Getter for the IPFS http client\n   *\n   * @var ipfs\n   *\n   * @returns {IpfsClient[]}\n   *\n   * @public\n   */\n  get ipfs(): IpfsClient[] {\n    return this.state.ipfs;\n  }\n\n  /**\n   * Getter for the GraphQL client\n   *\n   * @var graphql\n   *\n   * @returns {GraphQLClient[]}\n   *\n   * @public\n   */\n  get graphql(): GraphQLClient[] {\n    return this.state.graphql;\n  }\n\n  public getAddress(\n    contractName: FrameworkContractsNames | NonFrameworkContractsNames,\n  ): string | undefined {\n    return this.state[contractName];\n  }\n\n  // INTERNAL HELPERS\n  private static resolveNetwork(\n    networkish: Networkish,\n    ensRegistryAddress?: string,\n  ): Network {\n    const network = getNetwork(networkish);\n    if (ensRegistryAddress) {\n      if (!isAddress(ensRegistryAddress)) {\n        throw new InvalidAddressError();\n      } else {\n        network.ensAddress = ensRegistryAddress;\n      }\n    }\n    return network;\n  }\n\n  private static resolveWeb3Providers(\n    endpoints: string | JsonRpcProvider | (string | JsonRpcProvider)[],\n    network: Network,\n  ): JsonRpcProvider[] {\n    if (Array.isArray(endpoints)) {\n      return endpoints.map((item) => {\n        if (typeof item === \"string\") {\n          const url = new URL(item);\n          if (!supportedProtocols.includes(url.protocol)) {\n            throw new UnsupportedProtocolError(url.protocol);\n          }\n          return new JsonRpcProvider(url.href, network);\n        }\n        return item;\n      });\n    } else if (typeof endpoints === \"string\") {\n      const url = new URL(endpoints);\n      if (!supportedProtocols.includes(url.protocol)) {\n        throw new UnsupportedProtocolError(url.protocol);\n      }\n      return [new JsonRpcProvider(url.href, network)];\n    } else {\n      return [endpoints];\n    }\n  }\n\n  private static resolveIpfs(\n    configs: {\n      url: string;\n      headers?: Record<string, string>;\n    }[],\n  ): IpfsClient[] {\n    let clients: IpfsClient[] = [];\n    configs.forEach((config) => {\n      const url = new URL(config.url);\n      if (!supportedProtocols.includes(url.protocol)) {\n        throw new UnsupportedProtocolError(url.protocol);\n      }\n      clients.push(new IpfsClient(url, config.headers));\n    });\n    return clients;\n  }\n\n  private static resolveGraphql(endpoints: { url: string }[]): GraphQLClient[] {\n    let clients: GraphQLClient[] = [];\n    endpoints.forEach((endpoint) => {\n      const url = new URL(endpoint.url);\n      if (!supportedProtocols.includes(url.protocol)) {\n        throw new UnsupportedProtocolError(url.protocol);\n      }\n      clients.push(new GraphQLClient(url.href));\n    });\n    return clients;\n  }\n\n  private static resolveGasFeeEstimationFactor(\n    gasFeeEstimationFactor: number,\n  ): number {\n    if (gasFeeEstimationFactor < 0 || gasFeeEstimationFactor > 1) {\n      throw new InvalidGasEstimationFactorError();\n    }\n    return gasFeeEstimationFactor;\n  }\n}\n","import {\n  InvalidPromiseError,\n  InvalidTimeoutError,\n  TimeoutError,\n} from \"./errors\";\n\n/**\n * Run a promise with a timeout\n *\n * @export\n * @template T\n * @param {Promise<T>} prom The promise to track\n * @param {number} timeout Timeout (in milliseconds) to wait before failing\n * @param {string} [timeoutMessage] (optional) Message to use when throwing a timeout error. By default: `\"Time out\"`\n * @return {Promise<T>}\n */\nexport function promiseWithTimeout<T>(\n  prom: Promise<T>,\n  timeout: number,\n  timeoutMessage?: string,\n): Promise<T> {\n  if (\n    !prom ||\n    typeof prom.then !== \"function\" ||\n    typeof prom.catch !== \"function\"\n  ) {\n    throw new InvalidPromiseError();\n  } else if (isNaN(timeout) || timeout < 0) throw new InvalidTimeoutError();\n\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      () => reject(new TimeoutError(timeoutMessage || \"Time out\")),\n      timeout,\n    );\n\n    return prom.then((result) => resolve(result)).catch((err) => reject(err));\n  });\n}\n\n/**\n * Run a promise and retry it until it succeeds or the `shouldRetry` function returns false\n *\n * @export\n * @template T\n * @param {{\n *   func: () => Promise<T>;\n *   onFail?: (e: Error) => void;\n *   shouldRetry: () => boolean;\n * }} { func, onFail, shouldRetry }\n * @return {void}\n */\nexport async function runAndRetry<T>({ func, onFail, shouldRetry }: {\n  func: () => Promise<T>;\n  onFail?: (e: Error) => void;\n  shouldRetry: () => boolean;\n}) {\n  let lastErr: Error;\n  do {\n    try {\n      const result = await func();\n      // it worked\n      return result;\n    } catch (err) {\n      lastErr = err as Error;\n      if (typeof onFail === \"function\") {\n        onFail(err as Error);\n      }\n    }\n  } while (shouldRetry());\n\n  // all the iterations failed\n  throw lastErr;\n}\n","import { ClientError, GraphQLClient } from \"graphql-request\";\nimport { IClientGraphQLCore } from \"../interfaces\";\nimport { Context } from \"../../context\";\nimport { QueryStatus } from \"../graphql-queries\";\nimport {\n  ClientNotInitializedError,\n  GraphQLError,\n  NoNodesAvailableError,\n} from \"../../errors\";\nimport { runAndRetry } from \"../../promises\";\n\nexport class GraphqlModule implements IClientGraphQLCore {\n  private clientIdx: number = -1;\n  private clients: GraphQLClient[] = [];\n  constructor(context: Context) {\n    if (context.graphql?.length) {\n      this.clients = context.graphql;\n      this.clientIdx = Math.floor(Math.random() * context.graphql.length);\n    }\n  }\n  /**\n   * Get the current graphql client\n   * @returns {GraphQLClient}\n   */\n  public getClient(): GraphQLClient {\n    if (!this.clients.length || !this.clients[this.clientIdx]) {\n      throw new ClientNotInitializedError(\"graphql\");\n    }\n    return this.clients[this.clientIdx];\n  }\n\n  /**\n   * Starts using the next available Graphql endpoint\n   * @returns {void}\n   */\n  public shiftClient(): void {\n    if (!this.clients.length) {\n      throw new ClientNotInitializedError(\"graphql\");\n    } else if (this.clients.length < 2) {\n      throw new NoNodesAvailableError(\"graphql\");\n    }\n    this.clientIdx = (this.clientIdx + 1) % this.clients.length;\n  }\n\n  /**\n   * Checks if the current node is online\n   * @returns {Promise<boolean>}\n   */\n  public isUp(): Promise<boolean> {\n    return this.getClient().request(QueryStatus).then((res) => {\n      return !!res._meta?.deployment;\n    }).catch(() => {\n      return false;\n    });\n  }\n\n  /**\n   * Ensures that the graphql is online.\n   * If the current node is not online\n   * it will shift to the next one and\n   * repeat until it finds an online\n   * node. In the case that there are no\n   * nodes or none of them is available\n   * it will throw an error\n   * @returns {Promise<void>}\n   */\n  public async ensureOnline(): Promise<void> {\n    if (!this.clients.length) {\n      throw new ClientNotInitializedError(\"graphql\");\n    }\n    for (let i = 0; i < this.clients.length; i++) {\n      if (await this.isUp()) return;\n      this.shiftClient();\n    }\n    throw new NoNodesAvailableError(\"graphql\");\n  }\n\n  public request({ query, params, name }: {\n    query: string;\n    params: { [key: string]: any };\n    name?: string;\n  }) {\n    if (!this.clients.length) {\n      throw new ClientNotInitializedError(\"graphql\");\n    }\n    let retries = this.clients.length;\n    return runAndRetry({\n      func: () => this.getClient().request(query, params),\n      onFail: (e: Error) => {\n        if (e instanceof ClientError) {\n          // If the error code is not a 5XX means the\n          // error is not generated by the server\n          if (e.response.status < 500) {\n            throw new GraphQLError(name || \"\", e);\n          }\n        }\n        retries--;\n        this.shiftClient();\n      },\n      shouldRetry: () => retries > 0,\n    });\n  }\n}\n","import {\n  Client as IpfsClient,\n  ClientError,\n  PinResponse,\n} from \"@aragon/sdk-ipfs\";\nimport { IClientIpfsCore } from \"../interfaces\";\nimport { Context } from \"../../context\";\nimport {\n  ClientNotInitializedError,\n  DataDecodingError,\n  IpfsError,\n  NoNodesAvailableError,\n} from \"../../errors\";\nimport { runAndRetry } from \"../../promises\";\n\nexport class IPFSModule implements IClientIpfsCore {\n  private clientIdx: number = -1;\n  private clients: IpfsClient[] = [];\n  constructor(context: Context) {\n    // Storing client data in the private module's scope to prevent external mutation\n    if (context.ipfs?.length) {\n      this.clients = context.ipfs;\n      this.clientIdx = Math.floor(Math.random() * context.ipfs.length);\n    }\n  }\n\n  public getClient(): IpfsClient {\n    if (!this.clients.length || !this.clients[this.clientIdx]) {\n      throw new ClientNotInitializedError(\"ipfs\");\n    }\n    return this.clients[this.clientIdx];\n  }\n\n  /**\n   * Starts using the next available IPFS endpoint\n   */\n  public shiftClient(): void {\n    if (!this.clients.length) {\n      throw new ClientNotInitializedError(\"ipfs\");\n    } else if (this.clients?.length < 2) {\n      throw new NoNodesAvailableError(\"ipfs\");\n    }\n    this.clientIdx = (this.clientIdx + 1) % this.clients.length;\n  }\n\n  /** Returns `true` if the current client is on line */\n  public isUp(): Promise<boolean> {\n    if (!this.clients?.length) return Promise.resolve(false);\n    return this.getClient().nodeInfo().then(() => true).catch(() => false);\n  }\n\n  public async ensureOnline(): Promise<void> {\n    if (!this.clients.length) {\n      throw new ClientNotInitializedError(\"ipfs\");\n    }\n    for (let i = 0; i < this.clients?.length; i++) {\n      if (await this.isUp()) return;\n      this.shiftClient();\n    }\n    throw new NoNodesAvailableError(\"ipfs\");\n  }\n\n  public getOnlineClient(): Promise<IpfsClient> {\n    return this.ensureOnline().then(() => this.getClient());\n  }\n\n  // IPFS METHODS\n\n  public async add(input: string | Uint8Array): Promise<string> {\n    return this.runAndRetryHelper(() => this.getClient().add(input)).then((\n      res,\n    ) => res.hash);\n  }\n\n  public pin(input: string): Promise<PinResponse> {\n    return this.runAndRetryHelper(() => this.getClient().pin(input));\n  }\n\n  public fetchBytes(cid: string): Promise<Uint8Array | undefined> {\n    return this.runAndRetryHelper(() => this.getClient().cat(cid));\n  }\n\n  private runAndRetryHelper<T>(f: () => Promise<T>): Promise<T> {\n    if (!this.clients.length) {\n      throw new ClientNotInitializedError(\"ipfs\");\n    }\n    let retries = this.clients.length;\n    return runAndRetry({\n      func: f,\n      onFail: (e: Error) => {\n        if (e instanceof ClientError) {\n          if (e.response.status < 500) {\n            // If the error code is not a 5XX means the\n            // error is not generated by the server\n            throw new IpfsError(e);\n          }\n        }\n        retries--;\n        this.shiftClient();\n      },\n      shouldRetry: () => retries > 0,\n    });\n  }\n\n  public fetchString(cid: string): Promise<string> {\n    return this.fetchBytes(cid)\n      .then((bytes) => new TextDecoder().decode(bytes))\n      .catch((e) => {\n        throw new DataDecodingError(e.message);\n      });\n  }\n}\n","import { JsonRpcProvider } from \"@ethersproject/providers\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { IClientWeb3Core } from \"../interfaces\";\nimport { Context } from \"../../context\";\nimport { GasFeeEstimation } from \"../../types\";\nimport {\n  CannotEstimateGasError,\n  InvalidAddressError,\n  InvalidContractAbiError,\n  NoNodesAvailableError,\n  NoProviderError,\n  NoSignerError,\n  UnsupportedNetworkError,\n} from \"../../errors\";\nimport {\n  FrameworkContractsNames,\n  getNetworkByAlias,\n  NonFrameworkContractsNames,\n  SupportedNetworks,\n} from \"@aragon/osx-commons-configs\";\nexport class Web3Module implements IClientWeb3Core {\n  private static readonly PRECISION_FACTOR_BASE = 1000;\n  private providerIdx: number = -1;\n  private context: Context;\n\n  constructor(context: Context) {\n    this.context = context;\n    this.providerIdx = Math.floor(Math.random() * context.web3Providers.length);\n  }\n\n  /** Starts using the next available Web3 provider */\n  public shiftProvider(): void {\n    if (!this.context.web3Providers.length) {\n      throw new NoProviderError();\n    } else if (this.context.web3Providers.length <= 1) {\n      throw new NoNodesAvailableError(\"web3\");\n    }\n    this.providerIdx = (this.providerIdx + 1) %\n      this.context.web3Providers.length;\n  }\n\n  /** Retrieves the current signer */\n  public getSigner(): Signer {\n    if (!this.context.signer) {\n      throw new NoSignerError();\n    }\n    return this.context.signer;\n  }\n  /** Returns the currently active network provider */\n  public getProvider(): JsonRpcProvider {\n    if (!this.context.web3Providers[this.providerIdx]) {\n      throw new NoProviderError();\n    }\n    return this.context.web3Providers[this.providerIdx];\n  }\n\n  /** Returns the currently active network */\n  public getNetworkName(): SupportedNetworks {\n    const network = getNetworkByAlias(this.context.network.name);\n    if (!network) {\n      throw new UnsupportedNetworkError(this.context.network.name);\n    }\n    return network.name;\n  }\n\n  /** Returns a signer connected to the current network provider */\n  public getConnectedSigner(): Signer {\n    let signer = this.getSigner();\n    if (!signer.provider) {\n      const provider = this.getProvider();\n      signer = signer.connect(provider);\n    }\n    return signer;\n  }\n\n  /** Returns whether the current provider is functional or not */\n  public isUp(): Promise<boolean> {\n    const provider = this.getProvider();\n    return provider\n      .getNetwork()\n      .then(() => true)\n      .catch(() => false);\n  }\n\n  public async ensureOnline(): Promise<void> {\n    if (!this.context.web3Providers.length) {\n      throw new NoProviderError();\n    }\n\n    for (let i = 0; i < this.context.web3Providers.length; i++) {\n      if (await this.isUp()) return;\n      this.shiftProvider();\n    }\n    throw new NoNodesAvailableError(\"web3\");\n  }\n\n  /**\n   * Returns a contract instance at the given address\n   *\n   * @param address Contract instance address\n   * @param abi The Application Binary Inteface of the contract\n   * @return A contract instance attached to the given address\n   */\n  public attachContract<T>(\n    address: string,\n    abi: ContractInterface,\n  ): Contract & T {\n    if (!address || !isAddress(address)) throw new InvalidAddressError();\n    else if (!abi) throw new InvalidContractAbiError();\n    const signer = this.getConnectedSigner();\n    return new Contract(address, abi, signer) as Contract & T;\n  }\n\n  /** Calculates the expected maximum gas fee */\n  public getMaxFeePerGas(): Promise<bigint> {\n    return this.getConnectedSigner()\n      .getFeeData()\n      .then((feeData) => {\n        if (!feeData.maxFeePerGas) {\n          throw new CannotEstimateGasError();\n        }\n        return feeData.maxFeePerGas.toBigInt();\n      });\n  }\n\n  public getApproximateGasFee(estimatedFee: bigint): Promise<GasFeeEstimation> {\n    return this.getMaxFeePerGas().then((maxFeePerGas) => {\n      const max = estimatedFee * maxFeePerGas;\n\n      const factor = this.context.gasFeeEstimationFactor *\n        Web3Module.PRECISION_FACTOR_BASE;\n\n      const average = (max * BigInt(Math.trunc(factor))) /\n        BigInt(Web3Module.PRECISION_FACTOR_BASE);\n\n      return { average, max };\n    });\n  }\n\n  /** FRAMEWORK ADDRESSES */\n  public getAddress(\n    addressName: FrameworkContractsNames | NonFrameworkContractsNames,\n  ): string {\n    const address = this.context.getAddress(addressName);\n    if (!address || !isAddress(address)) {\n      throw new InvalidAddressError();\n    }\n    return address;\n  }\n}\n","import {\n  GraphqlModule,\n  IClientCore,\n  IClientGraphQLCore,\n  IClientIpfsCore,\n  IClientWeb3Core,\n  IPFSModule,\n  Web3Module,\n} from \"./internal\";\nimport { Context } from \"./context\";\n\n/**\n * Provides the low level foundation so that subclasses have ready-made access to Web3, IPFS and GraphQL primitives\n */\nexport abstract class ClientCore implements IClientCore {\n  public web3: IClientWeb3Core;\n  public ipfs: IClientIpfsCore;\n  public graphql: IClientGraphQLCore;\n  constructor(context: Context) {\n    this.web3 = new Web3Module(context);\n    this.ipfs = new IPFSModule(context);\n    this.graphql = new GraphqlModule(context);\n  }\n}\n","import { ContextCore } from \"./context-core\";\nimport { ContextParams } from \"./types\";\n\n// Basic implementation of the contex extending ContextCore\nexport class Context extends ContextCore {\n  constructor(params?: Partial<ContextParams>) {\n    super(params);\n  }\n}\n","import {\n  InvalidAddressOrEnsError,\n  InvalidCidError,\n  InvalidContractAbiError,\n  InvalidParameter,\n  InvalidSubdomainError,\n} from \"./errors\";\nimport { array, mixed, number, object, string } from \"yup\";\nimport { isAddress } from \"@ethersproject/address\";\nimport { ANY_ADDRESS } from \"./internal/constants\";\nimport { isEnsName, isIpfsUri, isSubdomain } from \"./validation\";\n\nexport const BigintSchema = mixed().test(\n  \"isBigint\",\n  new InvalidParameter(\"bigint\").message,\n  (value) => typeof value === \"bigint\",\n);\nexport const AddressOrEnsSchema = string().notRequired().test(\n  \"isAddressOrEns\",\n  new InvalidAddressOrEnsError().message,\n  (value) => value ? isAddress(value) || isEnsName(value) : true,\n);\nexport const AddressOrEnsWithoutAnySchema = string().notRequired().test(\n  \"isAddressOrEnsWithoutAny\",\n  new InvalidAddressOrEnsError().message,\n  (value) =>\n    value\n      ? (isAddress(value) || isEnsName(value)) && value !== ANY_ADDRESS\n      : true,\n);\nexport const VersionTagSchema = object({\n  build: number().moreThan(0).required(),\n  release: number().moreThan(0).required(),\n});\nexport const AbiSchema = array().notRequired().test(\n  \"isValidAbi\",\n  new InvalidContractAbiError().message,\n  // TODO: validate abi\n  () => true,\n);\nexport const Uint8ArraySchema = mixed().test(\n  \"isUint8Array\",\n  new InvalidParameter(\"Uint8Array\").message,\n  (value) => value ? value instanceof Uint8Array : true,\n);\nexport const IpfsUriSchema = string().test(\n  \"isIpfsUri\",\n  new InvalidCidError().message,\n  (value) => value ? isIpfsUri(value) : true,\n);\nexport const SubdomainSchema = string().test(\n  \"isSubdomain\",\n  new InvalidSubdomainError().message,\n  (value) => value ? isSubdomain(value) : true,\n);\n\nexport const PaginationSchema = object({\n  skip: number().min(0).notRequired(),\n  limit: number().min(1).notRequired(),\n  direction: string().oneOf([\"asc\", \"desc\"]).notRequired(),\n});\n\nexport const PrepareUninstallationSchema = object({\n  daoAddressOrEns: AddressOrEnsSchema.required(),\n  pluginAddress: AddressOrEnsSchema.required(),\n  pluginInstallationIndex: number().notRequired().min(0),\n  uninstallationParams: array().notRequired(),\n  uninstallationAbi: AbiSchema.notRequired(),\n});\nexport const MultiTargetPermissionSchema = object({\n  operation: number().required().oneOf([0, 1, 2]),\n  permissionId: string().required(),\n  where: AddressOrEnsWithoutAnySchema.required(),\n  who: AddressOrEnsWithoutAnySchema.required(),\n  condition: string().notRequired(),\n});\n\nexport const PrepareInstallationSchema = object({\n  daoAddressOrEns: AddressOrEnsSchema.required(),\n  pluginRepo: AddressOrEnsSchema.required(),\n  version: VersionTagSchema.notRequired(),\n  installationParams: array().notRequired(),\n  installationAbi: AbiSchema.notRequired(),\n});\n\nexport const PluginInstallItemSchema = object({\n  id: AddressOrEnsSchema.required(),\n  data: Uint8ArraySchema.required(),\n});\n\nexport const ApplyUninstallationSchema = object({\n  pluginAddress: AddressOrEnsSchema.required(),\n  pluginRepo: AddressOrEnsSchema.required(),\n  versionTag: VersionTagSchema.required(),\n  permissions: array(MultiTargetPermissionSchema).required(),\n});\n\nexport const ApplyInstallationSchema = ApplyUninstallationSchema.concat(object({\n  helpers: array(AddressOrEnsSchema).required(),\n}));\n\nexport const IsMemberSchema = object({\n  address: AddressOrEnsSchema.required(),\n  pluginAddress: AddressOrEnsSchema.required(),\n  blockNumber: number().notRequired(),\n});\n","export const ANY_ADDRESS = \"0xffffffffffffffffffffffffffffffffffffffff\";\n"],"names":["PrepareInstallationStep","PrepareUninstallationSteps","PermissionOperationType","SortDirection","TokenType","ProposalStatus","PrepareUpdateStep","MULTI_FETCH_TIMEOUT","IPFS_ENDPOINTS","prod","url","headers","test","Permissions","UPGRADE_PERMISSION","UPGRADE_PLUGIN_PERMISSION","SET_METADATA_PERMISSION","EXECUTE_PERMISSION","WITHDRAW_PERMISSION","SET_SIGNATURE_VALIDATOR_PERMISSION","SET_TRUSTED_FORWARDER_PERMISSION","ROOT_PERMISSION","CREATE_VERSION_PERMISSION","REGISTER_PERMISSION","REGISTER_DAO_PERMISSION","REGISTER_ENS_SUBDOMAIN_PERMISSION","MINT_PERMISSION","MERKLE_MINT_PERMISSION","MODIFY_ALLOWLIST_PERMISSION","SET_CONFIGURATION_PERMISSION","PermissionIds","Object","entries","reduce","acc","_ref","_extends2","_extends","keccak256","toUtf8Bytes","freeze","IPFS_CID_REGEX","IPFS_URI_REGEX","OSX_PROPOSAL_ID_REGEX","HEX_STRING_REGEX","ENS_REGEX","SUBDOMAIN_REGEX","QueryStatus","gql","_templateObject","_taggedTemplateLiteralLoose","QueryIPlugin","SdkError","_Error","message","cause","_this","call","this","Error","_inheritsLoose","_wrapNativeSuper","TimeoutError","_SdkError","UnsupportedProtocolError","_SdkError2","protocol","GraphQLError","_SdkError3","model","IpfsError","_SdkError4","InvalidAddressOrEnsError","_SdkError5","InvalidAddressError","_SdkError6","InvalidCidError","_SdkError7","InvalidProposalIdError","_SdkError8","NoProviderError","_SdkError9","NoSignerError","_SdkError10","UnexpectedActionError","_SdkError11","NoTokenAddress","_SdkError12","NoDaoFactory","_SdkError13","NoPluginRepoRegistry","_SdkError14","NoDaoRegistry","_SdkError15","IpfsPinError","_SdkError16","ProposalCreationError","_SdkError17","DaoCreationError","_SdkError18","MissingExecPermissionError","_SdkError19","IpfsFetchError","_SdkError20","InvalidVotingModeError","_SdkError21","UpdateAllowanceError","_SdkError22","InvalidPrecisionError","_SdkError23","FailedDepositError","_SdkError24","AmountMismatchError","_SdkError25","expected","received","UnsupportedNetworkError","_SdkError26","network","ClientNotInitializedError","_SdkError27","client","NoNodesAvailableError","_SdkError28","name","PluginInstallationPreparationError","_SdkError29","DataDecodingError","_SdkError30","InvalidContractAddressError","_SdkError31","InvalidContractAbiError","_SdkError32","CannotEstimateGasError","_SdkError33","InstallationNotFoundError","_SdkError34","PluginUninstallationPreparationError","_SdkError35","MissingMetadataError","_SdkError36","InvalidPrepareUninstallationAbiError","_SdkError37","InvalidEnsError","_SdkError38","DepositNativeTokenError","_SdkError39","AlwaysFailingProposalError","_SdkError40","SizeMismatchError","_SdkError41","field1","field2","InvalidProposalStatusError","_SdkError42","NotImplementedError","_SdkError43","InvalidActionError","_SdkError44","InvalidSubdomainError","_SdkError45","InvalidGasEstimationFactorError","_SdkError46","InvalidParameter","_SdkError47","NotAContractError","_SdkError48","InvalidVersionError","_SdkError49","PluginUpdatePreparationError","_SdkError50","ProposalNotFoundError","_SdkError51","InvalidArraySizeError","_SdkError52","size","InvalidRatioValueError","_SdkError53","ratio","InvalidDigitsValueError","_SdkError54","digits","ValueOutOfRangeError","_SdkError55","InvalidBitMapValueError","_SdkError56","EmptyMultiUriError","_SdkError57","InvalidPromiseError","_SdkError58","InvalidTimeoutError","_SdkError59","InvalidPermissionOperationType","_SdkError60","ContractNotDeployedError","_SdkError61","contractName","version","MultiUri","multiUri","items","split","_createClass","key","get","_step","_iterator","_createForOfIteratorHelperLoose","done","item","value","startsWith","substring","idx","indexOf","cid","_step2","_iterator2","path","pathIdx","searchIdx","filter","isProposalId","proposalId","RegExp","isEnsName","isIpfsUri","isSubdomain","ensure0x","strip0x","hexToBytes","hexString","Uint8Array","length","bytes","i","push","parseInt","from","bytesToHex","buff","skip0x","toString","join","findLog","receipt","iface","eventName","logs","find","log","topics","id","getEvent","format","getNamedTypesFromMetadata","inputs","map","input","type","tupleString","tupleResult","components","endsWith","concat","slice","_prepareGenericInstallationEstimation","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","web3","params","_getNetworkByNameOrAl","provider","ethers5NetworkName","networkName","pluginRepo","currentRelease","_params$installationP2","installationParams","_params$installationA2","data","deployment","pspContract","wrap","_context3","prev","next","getProvider","isAddress","getNetwork","getNetworkByNameOrAlias","sent","PluginRepo__factory","connect","latestRelease","tag","defaultAbiCoder","encode","installationAbi","getNetworkDeploymentForVersion","SupportedVersions","V1_3_0","PluginSetupProcessor__factory","FrameworkContractsNames","PLUGIN_SETUP_PROCESSOR","address","estimateGas","prepareInstallation","daoAddressOrEns","pluginSetupRef","pluginSetupRepo","versionTag","abrupt","getApproximateGasFee","toBigInt","stop","apply","arguments","_prepareGenericInstallation","_wrapAsyncGenerator","_callee","signer","_params$installationP","_params$installationA","tx","pspContractInterface","parsedLog","pluginAddress","preparedSetupData","_context","getConnectedSigner","_awaitAsyncGenerator","pluginSetupProcessorAddress","PREPARING","txHash","hash","wait","createInterface","parseLog","args","DONE","permissions","helpers","getPrepareUpdateParams","_x8","_x9","_getPrepareUpdateParams","_callee4","graphql","_params$pluginInstall","selectedInstallation","_params$updateParams","updateParams","_params$updateAbi","_context4","request","query","toLowerCase","where","dao","iplugin","installations","pluginInstallationIndex","newVersion","release","appliedVersion","build","updateAbi","currentVersionTag","newVersionTag","setupPayload","plugin","currentHelpers","appliedPreparation","_prepareGenericUpdateEstimation","_callee5","prepareUpdateParams","_context5","prepareUpdate","_prepareGenericUpdate","_callee2","initData","_context2","networkish","ethersGetNetwork","_unused","aragonNetwork","_networkDeployment$EN","getNetworkByChainId","ethers5Alias","getNetworkAlias","SupportedAliases","ETHERS_5","networkDeployment","ensRegistryAddress","ENSRegistry","chainId","ensAddress","aragonGetNetwork","_unused2","getDefaultIpfsNodes","networks","isTestnet","getDefaultGraphqlNodes","supportedProtocols","contractNames","values","NonFrameworkContractsNames","process","_process","env","TESTING","ContextCore","state","overriden","mergedParams","assign","set","_proto","prototype","contextParams","_contextParams$graphq","_contextParams$ipfsNo","resolveNetwork","setNetworkDefaults","web3Providers","Array","isArray","resolveWeb3Providers","graphqlNodes","resolveGraphql","ipfsNodes","ipfs","resolveIpfs","gasFeeEstimationFactor","resolveGasFeeEstimationFactor","getNetworkNameByAlias","_deployment$contractN","contractAddress","ENS_REGISTRY","getAddress","endpoints","URL","includes","JsonRpcProvider","href","configs","clients","forEach","config","IpfsClient","Client","endpoint","GraphQLClient","runAndRetry","_x","_runAndRetry","func","onFail","shouldRetry","lastErr","t0","GraphqlModule","context","_context$graphql","clientIdx","Math","floor","random","getClient","shiftClient","isUp","then","res","_res$_meta","_meta","ensureOnline","_ensureOnline","retries","e","ClientError","response","status","IPFSModule","_context$ipfs","_this$clients","_this$clients2","nodeInfo","Promise","resolve","_this$clients3","getOnlineClient","add","_add","_this2","runAndRetryHelper","pin","_this3","fetchBytes","_this4","cat","f","_this5","fetchString","TextDecoder","decode","Web3Module","providerIdx","shiftProvider","getSigner","getNetworkName","getNetworkByAlias","attachContract","abi","Contract","getMaxFeePerGas","getFeeData","feeData","maxFeePerGas","estimatedFee","max","average","BigInt","trunc","PRECISION_FACTOR_BASE","addressName","Context","_ContextCore","BigintSchema","mixed","AddressOrEnsSchema","string","notRequired","AddressOrEnsWithoutAnySchema","VersionTagSchema","object","number","moreThan","required","AbiSchema","array","Uint8ArraySchema","IpfsUriSchema","SubdomainSchema","PaginationSchema","skip","min","limit","direction","oneOf","PrepareUninstallationSchema","uninstallationParams","uninstallationAbi","MultiTargetPermissionSchema","operation","permissionId","who","condition","PrepareInstallationSchema","PluginInstallItemSchema","ApplyUninstallationSchema","ApplyInstallationSchema","IsMemberSchema","blockNumber","title","summary","description","resources","bitmap","result","mask","bools","matchedRegexResult","match","onChainValue","Number","isInteger","pow","round","splits","hexZeroPad","availableFunctions","hexBytes","Interface","getFunction","interfaceId","Zero","_i","_functions","keys","functions","xor","getSighash","toHexString","_x2","_x6","_x7","_x3","_x4","_x5","_x10","_x11","_x12","prom","timeout","timeoutMessage","isNaN","reject","setTimeout","err","ipfsCid"],"mappings":"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"}