import { JsonRpcProvider, Network } from "@ethersproject/providers";
import { Client as IpfsClient } from "@aragon/sdk-ipfs";
import { GraphQLClient } from "graphql-request";
import { Signer } from "@ethersproject/abstract-signer";
import { ContextParams, ContextState, OverriddenState } from "./types";
import { FrameworkContractsNames, NonFrameworkContractsNames } from "@aragon/osx-commons-configs";
export declare abstract class ContextCore {
    protected state: ContextState;
    protected overriden: OverriddenState;
    /**
     * @param {Object} params
     *
     * @constructor
     */
    constructor(params?: Partial<ContextParams>);
    set(contextParams: Partial<ContextParams>): void;
    private setNetworkDefaults;
    /**
     * Getter for the network
     *
     * @var network
     *
     * @returns {Networkish}
     *
     * @public
     */
    get network(): Network;
    /**
     * Getter for the Signer
     *
     * @var signer
     *
     * @returns {Signer}
     *
     * @public
     */
    get signer(): Signer;
    /**
     * Getter for the web3 providers
     *
     * @var web3Providers
     *
     * @returns {JsonRpcProvider[]}
     *
     * @public
     */
    get web3Providers(): JsonRpcProvider[];
    /**
     * Getter for the gas fee reducer used in estimations
     *
     * @var gasFeeEstimationFactor
     *
     * @returns {number}
     *
     * @public
     */
    get gasFeeEstimationFactor(): number;
    /**
     * Getter for the IPFS http client
     *
     * @var ipfs
     *
     * @returns {IpfsClient[]}
     *
     * @public
     */
    get ipfs(): IpfsClient[];
    /**
     * Getter for the GraphQL client
     *
     * @var graphql
     *
     * @returns {GraphQLClient[]}
     *
     * @public
     */
    get graphql(): GraphQLClient[];
    getAddress(contractName: FrameworkContractsNames | NonFrameworkContractsNames): string | undefined;
    private static resolveNetwork;
    private static resolveWeb3Providers;
    private static resolveIpfs;
    private static resolveGraphql;
    private static resolveGasFeeEstimationFactor;
}
