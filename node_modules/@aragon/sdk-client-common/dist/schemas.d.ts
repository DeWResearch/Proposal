export declare const BigintSchema: import("yup").MixedSchema<{} | undefined, import("yup").AnyObject, undefined, "">;
export declare const AddressOrEnsSchema: import("yup").StringSchema<import("yup").Maybe<string | undefined>, import("yup").AnyObject, undefined, "">;
export declare const AddressOrEnsWithoutAnySchema: import("yup").StringSchema<import("yup").Maybe<string | undefined>, import("yup").AnyObject, undefined, "">;
export declare const VersionTagSchema: import("yup").ObjectSchema<{
    build: number;
    release: number;
}, import("yup").AnyObject, {
    build: undefined;
    release: undefined;
}, "">;
export declare const AbiSchema: import("yup").ArraySchema<import("yup").Maybe<any[] | undefined>, import("yup").AnyObject, undefined, "">;
export declare const Uint8ArraySchema: import("yup").MixedSchema<{} | undefined, import("yup").AnyObject, undefined, "">;
export declare const IpfsUriSchema: import("yup").StringSchema<string | undefined, import("yup").AnyObject, undefined, "">;
export declare const SubdomainSchema: import("yup").StringSchema<string | undefined, import("yup").AnyObject, undefined, "">;
export declare const PaginationSchema: import("yup").ObjectSchema<{
    skip: import("yup").Maybe<number | undefined>;
    limit: import("yup").Maybe<number | undefined>;
    direction: import("yup").Maybe<"asc" | "desc" | undefined>;
}, import("yup").AnyObject, {
    skip: undefined;
    limit: undefined;
    direction: undefined;
}, "">;
export declare const PrepareUninstallationSchema: import("yup").ObjectSchema<{
    daoAddressOrEns: string;
    pluginAddress: string;
    pluginInstallationIndex: import("yup").Maybe<number | undefined>;
    uninstallationParams: import("yup").Maybe<any[] | undefined>;
    uninstallationAbi: import("yup").Maybe<import("yup").Maybe<any[] | undefined>>;
}, import("yup").AnyObject, {
    daoAddressOrEns: undefined;
    pluginAddress: undefined;
    pluginInstallationIndex: undefined;
    uninstallationParams: undefined;
    uninstallationAbi: undefined;
}, "">;
export declare const MultiTargetPermissionSchema: import("yup").ObjectSchema<{
    operation: number;
    permissionId: string;
    where: string;
    who: string;
    condition: import("yup").Maybe<string | undefined>;
}, import("yup").AnyObject, {
    operation: undefined;
    permissionId: undefined;
    where: undefined;
    who: undefined;
    condition: undefined;
}, "">;
export declare const PrepareInstallationSchema: import("yup").ObjectSchema<{
    daoAddressOrEns: string;
    pluginRepo: string;
    version: {
        build: number;
        release: number;
    } | null | undefined;
    installationParams: import("yup").Maybe<any[] | undefined>;
    installationAbi: import("yup").Maybe<import("yup").Maybe<any[] | undefined>>;
}, import("yup").AnyObject, {
    daoAddressOrEns: undefined;
    pluginRepo: undefined;
    version: {
        build: undefined;
        release: undefined;
    };
    installationParams: undefined;
    installationAbi: undefined;
}, "">;
export declare const PluginInstallItemSchema: import("yup").ObjectSchema<{
    id: string;
    data: {};
}, import("yup").AnyObject, {
    id: undefined;
    data: undefined;
}, "">;
export declare const ApplyUninstallationSchema: import("yup").ObjectSchema<{
    pluginAddress: string;
    pluginRepo: string;
    versionTag: {
        build: number;
        release: number;
    };
    permissions: {
        condition?: import("yup").Maybe<string | undefined>;
        operation: number;
        permissionId: string;
        where: string;
        who: string;
    }[];
}, import("yup").AnyObject, {
    pluginAddress: undefined;
    pluginRepo: undefined;
    versionTag: {
        build: undefined;
        release: undefined;
    };
    permissions: undefined;
}, "">;
export declare const ApplyInstallationSchema: import("yup").ObjectSchema<{
    pluginAddress: string;
    pluginRepo: string;
    versionTag: {
        build: number;
        release: number;
    };
    permissions: {
        condition?: import("yup").Maybe<string | undefined>;
        operation: number;
        permissionId: string;
        where: string;
        who: string;
    }[];
} & {
    helpers: (string | null | undefined)[];
}, import("yup").AnyObject, {
    pluginAddress: undefined;
    pluginRepo: undefined;
    versionTag: {
        build: undefined;
        release: undefined;
    };
    permissions: undefined;
    helpers: undefined;
}, "">;
export declare const IsMemberSchema: import("yup").ObjectSchema<{
    address: string;
    pluginAddress: string;
    blockNumber: import("yup").Maybe<number | undefined>;
}, import("yup").AnyObject, {
    address: undefined;
    pluginAddress: undefined;
    blockNumber: undefined;
}, "">;
