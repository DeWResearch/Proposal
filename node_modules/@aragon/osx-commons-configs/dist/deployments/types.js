"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NonFrameworkContractsNames = exports.FrameworkContractsNames = exports.SupportedVersions = void 0;
// the entries in this enum has to be in order from
// oldest to newest so that getLatestNetworkVersion() works as expected
var SupportedVersions;
(function (SupportedVersions) {
    SupportedVersions["V1_0_0"] = "v1.0.0";
    SupportedVersions["V1_3_0"] = "v1.3.0";
})(SupportedVersions || (exports.SupportedVersions = SupportedVersions = {}));
// contracts that must always be deployed
var FrameworkContractsNames;
(function (FrameworkContractsNames) {
    FrameworkContractsNames["DAO_BASE"] = "DAOBase";
    FrameworkContractsNames["DAO_FACTORY"] = "DAOFactory";
    FrameworkContractsNames["DAO_REGISTRY_PROXY"] = "DAORegistryProxy";
    FrameworkContractsNames["DAO_REGISTRY_IMPLEMENTATION"] = "DAORegistryImplementation";
    FrameworkContractsNames["DAO_ENS_SUBDOMAIN_REGISTRAR_PROXY"] = "DAOENSSubdomainRegistrarProxy";
    FrameworkContractsNames["DAO_ENS_SUBDOMAIN_REGISTRAR_IMPLEMENTATION"] = "DAOENSSubdomainRegistrarImplementation";
    FrameworkContractsNames["PLUGIN_SETUP_PROCESSOR"] = "PluginSetupProcessor";
    FrameworkContractsNames["PLUGIN_REPO_BASE"] = "PluginRepoBase";
    FrameworkContractsNames["PLUGIN_REPO_FACTORY"] = "PluginRepoFactory";
    FrameworkContractsNames["PLUGIN_REPO_REGISTRY_PROXY"] = "PluginRepoRegistryProxy";
    FrameworkContractsNames["PLUGIN_REPO_REGISTRY_IMPLEMENTATION"] = "PluginRepoRegistryImplementation";
    FrameworkContractsNames["PLUGIN_ENS_SUBDOMAIN_REGISTRAR_PROXY"] = "PluginENSSubdomainRegistrarProxy";
    FrameworkContractsNames["PLUGIN_ENS_SUBDOMAIN_REGISTRAR_IMPLEMENTATION"] = "PluginENSSubdomainRegistrarImplementation";
    FrameworkContractsNames["MANAGEMENT_DAO_PROXY"] = "ManagementDAOProxy";
    FrameworkContractsNames["MANAGEMENT_DAO_IMPLEMENTATION"] = "ManagementDAOImplementation";
})(FrameworkContractsNames || (exports.FrameworkContractsNames = FrameworkContractsNames = {}));
// contracts that are optionally deployed
var NonFrameworkContractsNames;
(function (NonFrameworkContractsNames) {
    NonFrameworkContractsNames["ADDRESSLIST_VOTING_SETUP"] = "AddresslistVotingSetup";
    NonFrameworkContractsNames["ADDRESSLIST_VOTING_SETUP_IMPLEMENTATION"] = "AddresslistVotingSetupImplementation";
    NonFrameworkContractsNames["ADDRESSLIST_VOTING_REPO_PROXY"] = "AddresslistVotingRepoProxy";
    NonFrameworkContractsNames["ADDRESSLIST_VOTING_REPO_IMPLEMENTATION"] = "AddresslistVotingRepoImplementation";
    NonFrameworkContractsNames["ADMIN_SETUP"] = "AdminSetup";
    NonFrameworkContractsNames["ADMIN_SETUP_IMPLEMENTATION"] = "AdminSetupImplementation";
    NonFrameworkContractsNames["ADMIN_REPO_PROXY"] = "AdminRepoProxy";
    NonFrameworkContractsNames["ADMIN_REPO_IMPLEMENTATION"] = "AdminRepoImplementation";
    NonFrameworkContractsNames["MULTISIG_SETUP"] = "MultisigSetup";
    NonFrameworkContractsNames["MULTISIG_SETUP_IMPLEMENTATION"] = "MultisigSetupImplementation";
    NonFrameworkContractsNames["MULTISIG_REPO_PROXY"] = "MultisigRepoProxy";
    NonFrameworkContractsNames["MULTISIG_REPO_IMPLEMENTATION"] = "MultisigRepoImplementation";
    NonFrameworkContractsNames["TOKEN_VOTING_SETUP"] = "TokenVotingSetup";
    NonFrameworkContractsNames["TOKEN_VOTING_SETUP_IMPLEMENTATION"] = "TokenVotingSetupImplementation";
    NonFrameworkContractsNames["TOKEN_VOTING_REPO_PROXY"] = "TokenVotingRepoProxy";
    NonFrameworkContractsNames["TOKEN_VOTING_REPO_IMPLEMENTATION"] = "TokenVotingRepoImplementation";
    NonFrameworkContractsNames["GOVERNANCE_ERC20"] = "GovernanceERC20";
    NonFrameworkContractsNames["GOVERNANCE_WRAPPED_ERC20"] = "GovernanceWrappedERC20";
    NonFrameworkContractsNames["ENS_REGISTRY"] = "ENSRegistry";
})(NonFrameworkContractsNames || (exports.NonFrameworkContractsNames = NonFrameworkContractsNames = {}));
//# sourceMappingURL=types.js.map