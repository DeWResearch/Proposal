"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addRpcUrlToNetwork = exports.networksAlchemyRpcUrl = exports.networks = void 0;
const types_1 = require("./types");
exports.networks = {
    [types_1.SupportedNetworks.MAINNET]: {
        isTestnet: false,
        chainId: 1,
        name: types_1.SupportedNetworks.MAINNET,
        aliases: {
            ethers5: 'homestead',
        },
    },
    [types_1.SupportedNetworks.GOERLI]: {
        isTestnet: true,
        chainId: 5,
        name: types_1.SupportedNetworks.GOERLI,
        aliases: {},
    },
    [types_1.SupportedNetworks.SEPOLIA]: {
        isTestnet: true,
        chainId: 11155111,
        name: types_1.SupportedNetworks.SEPOLIA,
        aliases: {},
    },
    [types_1.SupportedNetworks.POLYGON]: {
        isTestnet: false,
        chainId: 137,
        feesUrl: 'https://gasstation-mainnet.matic.network/v2',
        name: types_1.SupportedNetworks.POLYGON,
        aliases: {
            ethers5: 'matic',
            ethers6: 'matic',
            alchemySubgraphs: 'matic',
        },
    },
    [types_1.SupportedNetworks.MUMBAI]: {
        isTestnet: true,
        chainId: 80001,
        feesUrl: 'https://gasstation-mumbai.matic.today/v2',
        name: types_1.SupportedNetworks.MUMBAI,
        aliases: {
            ethers5: 'maticmum',
            ethers6: 'matic-mumbai',
            alchemySubgraphs: 'mumbai',
        },
    },
    [types_1.SupportedNetworks.BASE]: {
        isTestnet: false,
        chainId: 8453,
        gasPrice: 1000,
        name: types_1.SupportedNetworks.BASE,
        aliases: {
            alchemySubgraphs: 'base',
        },
    },
    [types_1.SupportedNetworks.BASE_GOERLI]: {
        isTestnet: true,
        chainId: 84531,
        gasPrice: 1000000,
        name: types_1.SupportedNetworks.BASE_GOERLI,
        aliases: {
            alchemySubgraphs: 'base-testnet',
        },
    },
    [types_1.SupportedNetworks.BASE_SEPOLIA]: {
        isTestnet: true,
        chainId: 84532,
        gasPrice: 1000000,
        name: types_1.SupportedNetworks.BASE_SEPOLIA,
        aliases: {
            alchemySubgraphs: 'base-sepolia',
        },
    },
    [types_1.SupportedNetworks.ARBITRUM]: {
        isTestnet: false,
        chainId: 42161,
        name: types_1.SupportedNetworks.ARBITRUM,
        aliases: {
            alchemySubgraphs: 'arbitrum-one',
        },
    },
    [types_1.SupportedNetworks.ARBITRUM_SEPOLIA]: {
        isTestnet: true,
        chainId: 421614,
        name: types_1.SupportedNetworks.ARBITRUM_SEPOLIA,
        aliases: {
            alchemySubgraphs: 'arbitrum-sepolia',
        },
    },
    [types_1.SupportedNetworks.ZKSYNC_SEPOLIA]: {
        chainId: 300,
        isTestnet: true,
        name: types_1.SupportedNetworks.ZKSYNC_SEPOLIA,
        aliases: {},
    },
    [types_1.SupportedNetworks.ZKSYNC_MAINNET]: {
        chainId: 324,
        isTestnet: true,
        name: types_1.SupportedNetworks.ZKSYNC_MAINNET,
        aliases: {},
    },
    [types_1.SupportedNetworks.LOCAL]: {
        isTestnet: true,
        chainId: 31337,
        name: types_1.SupportedNetworks.LOCAL,
        aliases: {},
    },
};
exports.networksAlchemyRpcUrl = {
    [types_1.SupportedNetworks.MAINNET]: 'https://eth-mainnet.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.GOERLI]: 'https://eth-goerli.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.SEPOLIA]: 'https://eth-sepolia.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.POLYGON]: 'https://polygon-mainnet.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.MUMBAI]: 'https://polygon-mumbai.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.BASE]: 'https://base-mainnet.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.BASE_GOERLI]: 'https://goerli.base.org',
    [types_1.SupportedNetworks.BASE_SEPOLIA]: 'https://base-sepolia.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.ARBITRUM]: 'https://arb-mainnet.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.ARBITRUM_SEPOLIA]: 'https://arb-sepolia.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.ZKSYNC_SEPOLIA]: 'https://zksync-sepolia.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.ZKSYNC_MAINNET]: 'https://zksync-mainnet.g.alchemy.com/v2/',
    [types_1.SupportedNetworks.LOCAL]: 'http://localhost:8545',
};
function addRpcUrlToNetwork(apiKey, networksRpcUrl = exports.networksAlchemyRpcUrl) {
    // add the api key to the network urls
    for (const network of Object.values(types_1.SupportedNetworks)) {
        if (network == types_1.SupportedNetworks.LOCAL ||
            network == types_1.SupportedNetworks.BASE_GOERLI) {
            exports.networks[network].url = networksRpcUrl[network];
        }
        else {
            exports.networks[network].url = `${networksRpcUrl[network]}${apiKey}`;
        }
    }
}
exports.addRpcUrlToNetwork = addRpcUrlToNetwork;
//# sourceMappingURL=networks.js.map