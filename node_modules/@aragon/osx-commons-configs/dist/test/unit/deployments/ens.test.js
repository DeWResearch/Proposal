"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const deployments_1 = require("../../../deployments");
const networks_1 = require("../../../networks");
describe('Domains', () => {
    describe('getDaoEnsDomain', () => {
        it('should return the correct dao ens', () => {
            var _a, _b;
            for (const network of Object.values(networks_1.SupportedNetworks)) {
                if (deployments_1.exceptionalDomains[network]) {
                    expect((0, deployments_1.getDaoEnsDomain)(network)).toMatch((_b = (_a = deployments_1.exceptionalDomains[network]) === null || _a === void 0 ? void 0 : _a.daoEns) !== null && _b !== void 0 ? _b : '');
                }
                else {
                    expect((0, deployments_1.getDaoEnsDomain)(network)).toMatch(deployments_1.commonDomain.daoEns);
                }
            }
        });
    });
    describe('getPluginEnsDomain', () => {
        it('should return the correct plugin ens', () => {
            var _a, _b;
            for (const network of Object.values(networks_1.SupportedNetworks)) {
                if (deployments_1.exceptionalDomains[network]) {
                    expect((0, deployments_1.getPluginEnsDomain)(network)).toMatch((_b = (_a = deployments_1.exceptionalDomains[network]) === null || _a === void 0 ? void 0 : _a.daoEns) !== null && _b !== void 0 ? _b : '');
                }
                else {
                    expect((0, deployments_1.getPluginEnsDomain)(network)).toMatch(deployments_1.commonDomain.pluginEns);
                }
            }
        });
    });
    describe('add new network to exceptional domains', () => {
        beforeEach(() => {
            deployments_1.exceptionalDomains[networks_1.SupportedNetworks.LOCAL] = {
                daoEns: 'new-dao.eth',
                pluginEns: 'plugin.new-dao.eth',
            };
        });
        it('should return the new exceptional dao ens', () => {
            var _a, _b;
            expect((0, deployments_1.getDaoEnsDomain)(networks_1.SupportedNetworks.LOCAL)).toMatch((_b = (_a = deployments_1.exceptionalDomains[networks_1.SupportedNetworks.LOCAL]) === null || _a === void 0 ? void 0 : _a.daoEns) !== null && _b !== void 0 ? _b : '');
        });
        it('should return the new exceptional plugin ens', () => {
            var _a, _b;
            expect((0, deployments_1.getPluginEnsDomain)(networks_1.SupportedNetworks.LOCAL)).toMatch((_b = (_a = deployments_1.exceptionalDomains[networks_1.SupportedNetworks.LOCAL]) === null || _a === void 0 ? void 0 : _a.pluginEns) !== null && _b !== void 0 ? _b : '');
        });
    });
});
//# sourceMappingURL=ens.test.js.map