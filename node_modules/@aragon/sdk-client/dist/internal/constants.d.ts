import { DaoMetadata, PluginRepoBuildMetadata, PluginRepoReleaseMetadata } from "../types";
import { ProposalActionTypes } from "./types";
export declare const AVAILABLE_FUNCTION_SIGNATURES: string[];
export declare const UNSUPPORTED_DAO_METADATA_LINK: DaoMetadata;
export declare const EMPTY_DAO_METADATA_LINK: DaoMetadata;
export declare const UNAVAILABLE_DAO_METADATA: DaoMetadata;
export declare const UNSUPPORTED_RELEASE_METADATA_LINK: PluginRepoReleaseMetadata;
export declare const EMPTY_RELEASE_METADATA_LINK: PluginRepoReleaseMetadata;
export declare const UNAVAILABLE_RELEASE_METADATA: PluginRepoReleaseMetadata;
export declare const UNSUPPORTED_BUILD_METADATA_LINK: PluginRepoBuildMetadata;
export declare const EMPTY_BUILD_METADATA_LINK: PluginRepoBuildMetadata;
export declare const UNAVAILABLE_BUILD_METADATA: PluginRepoBuildMetadata;
export declare enum SupportedPluginRepo {
    ADMIN = "admin",
    MULTISIG = "multisig",
    TOKEN_VOTING = "token-voting",
    ADDRESS_LIST_VOTING = "address-list-voting"
}
export declare const SupportedPluginRepoArray: SupportedPluginRepo[];
export declare const ZERO_BYTES_HASH: string;
export declare enum PreparationType {
    NONE = 0,
    INSTALLATION = 1,
    UPDATE = 2,
    UNINSTALLATION = 3
}
export declare const UPDATE_PLUGIN_SIGNATURES: string[];
export declare const PLUGIN_UPDATE_ACTION_PATTERN: ProposalActionTypes[];
export declare const PLUGIN_UPDATE_WITH_ROOT_ACTION_PATTERN: ProposalActionTypes[];
